{"version":3,"sources":["views/Auth/Mask Group.png","assets sync /^/.//.*$","assets/dots.svg","assets/download.svg","assets/notify.svg","assets/options.svg","assets/reupload.svg","assets/search.svg","utils/history.js","services/route/routeService.js","bootstrap/Wrapper/Wrapper.js","App.js","constants/url.js","api/authApi/loginApi.js","constants/authConstants.js","redux/actions/authActions/loginActions.js","views/Auth/Login/index.js","api/authApi/signUpApi.js","redux/actions/authActions/signUpActions.js","views/Auth/SignUp/index.js","views/Auth/RequestSent/index.js","api/authApi/passwordApi.js","redux/actions/authActions/passwordActions.js","views/Auth/ForgotPassword/ResetPassword/index.js","views/Auth/ForgotPassword/PasswordLinkSent/index.js","views/Auth/SetPassword/index.js","views/Auth/ForgotPassword/ChangePassword/index.js","views/Auth/ForgotPassword/Congratulations/index.js","views/OnboardingPage/index.js","components/NavBar/index.js","utils/getSVG.js","components/TableLanding/index.js","views/LandingPage/OngoingTests/index.js","views/LandingPage/CompletedTests/index.js","services/route/routes.js","serviceWorker.js","redux/reducers/authReducers/loginReducer.js","redux/reducers/authReducers/signupReducer.js","redux/reducers/authReducers/passwordReducer.js","redux/reducers/index.js","redux/store/index.js","index.js","views/OnboardingPage/machine1.png","views/OnboardingPage/machine2.png","views/OnboardingPage/machine3.png","views/OnboardingPage/machine4.png"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","createHistory","renderRoutes","routes","extraProps","switchProps","route","i","key","path","exact","strict","render","props","location","check","history","push","component","Wrapper","routeService","App","className","url","BASE_API_URL","loginApi","login","email","password","axios","post","then","response","logout","authConstants","SIGN_UP_REQUESTED","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOGIN_REQUESTED","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","RESET_PASSWORD_REQUESTED","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","SET_PASSWORD_REQUESTED","SET_PASSWORD_SUCCESS","SET_PASSWORD_FAILURE","CHANGE_PASSWORD_REQUESTED","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","loginActions","createBrowserHistory","loginRequested","type","console","log","dispatch","localStorage","setItem","JSON","stringify","data","payload","catch","error","toString","removeItem","Login","useHistory","useState","setEmail","setPassword","isSubmitted","useSelector","state","isLoggedIn","isInvailed","useDispatch","Container","fluid","Row","Col","Card","Image","src","mask","ImgOverlay","Text","Title","Subtitle","Navbar","href","border","Form","onSubmit","preventDefault","stopPropagation","Group","as","controlId","sm","Control","placeholder","size","value","onChange","target","length","required","Feedback","role","Button","variant","Spinner","animation","aria-hidden","signUpApi","signUp","firstName","lastName","labName","labLocation","first_name","last_name","lab","city","signUpActions","signUpRequested","SignUp","setFirstName","setLastName","setLabName","setLabLocation","isRegisterd","isRegistered","isInvalid","RequestSent","getItem","passwordApi","resetPassword","password1","password2","uid","token","new_password1","new_password2","changePassword","oldPassword","old_password","passwordActions","resetPasswordRequested","setPasswordRequested","changePasswordRequested","ResetPassword","isResetPasswordSuccess","isResetPasswordFailure","PasswordLinkSent","Component","SetPassword","match","useRouteMatch","newPassword","setNewPassword","confirmPassword","setConfirmPassword","params","isSetPasswordSuccess","ChangePassword","setOldPassword","setValidated","isChangePasswordSuccess","isChangePasswordFailure","currentTarget","Congratulations","Onboarding","Fragment","Body","md","OverlayTrigger","trigger","overlay","ListGroup","ListGroupItem","placement","machine1","rounded","thumbnail","machine2","machine3","machine4","NavBarLanding","Brand","Nav","activeKey","activepage","Item","Link","NavDropdown","title","userId","alignRight","disabled","getSVG","imageName","imgpath","require","images","alt","TableLanding","rows","testStatus","getKeys","jsonoutput","optionsot","Popover","Content","bsPrefix","Table","borderless","hover","responsive","head","row","items","concat","index","style","borderLeft","getBody","OngoingTests","radioValue","setRadioValue","NavBar","xs","name","radio","idx","ButtonGroup","toggle","ToggleButton","checked","span","offset","display","justifyContent","Label","htmlFor","srOnly","InputGroup","Prepend","FormControl","CompletedTests","FormGroup","label","opt","Boolean","window","hostname","initalState","rootReducer","combineReducers","action","user","loggerMiddleware","createLogger","store","createStore","rootreducer","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0JAAAA,EAAOC,QAAU,IAA0B,wC,gPCA3C,IAAIC,EAAM,CACT,aAAc,IACd,iBAAkB,IAClB,eAAgB,IAChB,gBAAiB,IACjB,iBAAkB,IAClB,eAAgB,KAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,oBC3BpBL,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,uJCC5Bc,E,MAAAA,KCGFC,EAAe,SAACC,GAA+C,IAAvCC,EAAsC,uDAAzB,GAAIC,EAAqB,uDAAP,GAClE,OAAKF,EAEH,kBAAC,IAAWE,EACTF,EAAOf,KAAI,SAACkB,EAAOC,GAAR,OACV,kBAAC,IAAD,CACEC,IAAKF,EAAME,KAAOD,EAClBE,KAAMH,EAAMG,KACZC,MAAOJ,EAAMI,MACbC,OAAQL,EAAMK,OACdC,OAAQ,SAACC,GACP,IAAMC,EAAWR,EAAMS,OAAST,EAAMS,MAAMF,GAC5C,OAAIC,GACFD,EAAMG,QAAQC,KAAKH,GACZ,MAEF,kBAACR,EAAMY,UAAP,iBAAqBL,EAAWT,EAAhC,CAA4CE,MAAOA,MAE5DU,QAASA,QAjBG,MCOPG,EATC,SAACN,GAAW,IAClBP,EAAUO,EAAVP,MACR,OACE,kBAAC,WAAD,KACE,6BAAMc,EAA0Bd,EAAMH,WCY7BkB,G,OAbI,WACjB,OAGI,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kF,+GCPKC,EALH,CAEVC,aAAc,0BCCHC,EAAW,CACtBC,MAIF,SAAeC,EAAOC,GACpB,OAAOC,IACJC,KAAKP,EAAIC,aAAe,cAAe,CACtCG,MAAOA,EACPC,SAAUA,IAEXG,MAAK,SAACC,GACL,OAAOA,MAVXC,OAcF,WACE,OAAOJ,IAAMC,KAAKP,EAAIC,aAAe,eAAeO,MAAK,SAACC,GACxD,OAAOA,OCrBX,IA0BeE,EA1BO,CAEpBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,gBAAiB,kBAEjBC,gBAAiB,kBACjBC,cAAe,gBACfC,cAAe,gBAEfC,OAAQ,SAERC,yBAA0B,2BAC1BC,uBAAwB,yBACxBC,uBAAwB,yBAExBC,uBAAwB,yBACxBC,qBAAsB,uBACtBC,qBAAsB,uBAEtBC,0BAA2B,4BAC3BC,wBAAyB,0BACzBC,wBAAyB,2BChBdC,GAFGC,cAEY,CAC1BC,eAKF,WACE,MAAO,CACLC,KAAMpB,EAAcI,kBANtBZ,MAUF,SAAeC,EAAOC,GAEpB,OADA2B,QAAQC,IAAI,SAAU7B,EAAOC,GACtB,SAAC6B,GACNhC,EACGC,MAAMC,EAAOC,GACbG,MAAK,SAACC,GACLuB,QAAQC,IAAI,QAASxB,GACrB0B,aAAaC,QAAQ,OAAQC,KAAKC,UAAU7B,EAAS8B,OACrDL,EAAS,CACPH,KAAMpB,EAAcK,cACpBwB,QAAS/B,EAAS8B,UAIrBE,OAAM,SAACC,GACNV,QAAQC,IAAI,QAASS,GACrBR,EAAS,CACPH,KAAMpB,EAAcM,cACpBuB,QAASE,EAAMC,kBA3BvBjC,OAiCF,WACE,OAAO,SAACwB,GACNhC,EAASQ,SAASF,MAAK,SAACC,GACtB0B,aAAaS,WAAW,OAAQP,KAAKC,UAAU7B,EAAS8B,OACxDL,EAAS,CACPH,KAAMpB,EAAcO,gB,qBCkIb2B,G,OA/JD,WACZ,IAAIpD,EAAUqD,cADI,EAIQC,mBAAS,IAJjB,mBAIX3C,EAJW,KAIJ4C,EAJI,OAKcD,mBAAS,IALvB,mBAKX1C,EALW,KAKD4C,EALC,KASZC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMjD,MAAM+C,eACjDG,EAAaF,aAAY,SAACC,GAAD,OAAWA,EAAMjD,MAAMkD,cAChDC,EAAaH,aAAY,SAACC,GAAD,OAAWA,EAAMjD,MAAMmD,cAGhDpB,EAAWqB,cAkCjB,OAJIF,GACF5D,EAAQC,KAAK,eAIb,kBAAC8D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAON,yBAAKtE,UAAU,SACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,SAAN,wDAEiB,IACjB,6BACA,kBAACI,EAAA,EAAD,CAAMC,SAjEG,SAACpG,GACpBA,EAAEqG,iBACFrG,EAAEsG,kBAnByBxC,EAASN,EAAaE,kBAuB7C1B,GAASC,GAtBK6B,EAASN,EAAazB,MAAMC,EAAOC,MAmFzC,kBAACkE,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,uBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,QACLiD,YAAY,gBACZC,KAAK,KACLC,MAAO9E,EACP+E,SAzFK,SAAC/G,GAAO,IACvB8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBrC,EAASkC,IAuFOI,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,uBAIF,kBAACwC,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,oBAAoBW,KAAK,QACtD,kBAAC7B,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,WACZC,KAAK,KACLC,MAAO7E,EACP8E,SAlGQ,SAAC/G,GAAO,IAC1B8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBpC,EAAYiC,IAgGII,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,0BAIF,kBAAC0D,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,KAAKlD,KAAK,UACtCmB,GACC,kBAACyC,EAAA,EAAD,CACEf,GAAG,OACHgB,UAAU,SACVX,KAAK,KACLO,KAAK,SACLK,cAAY,SAPlB,SAYCvC,GAAc,kBAACM,EAAA,EAAKK,KAAN,uBAEjB,kBAACL,EAAA,EAAKK,KAAN,KACE,uBAAGI,KAAK,mBAAR,qBAEF,kBAACT,EAAA,EAAKK,KAAN,CAAWlE,UAAU,YAArB,aACY,uBAAGsE,KAAK,YAAR,cADZ,wBCnKDyB,EAAY,CACvBC,OAGF,SAAgB3F,EAAO4F,EAAWC,EAAUC,EAASC,GACnD,OAAO7F,IACJC,KAAKP,EAAIC,aAAJ,iBAAqC,CACzCG,MAAOA,EACPgG,WAAYJ,EACZK,UAAWJ,EACXK,IAAKJ,EACLK,KAAMJ,IAEP3F,MAAK,SAACC,GACL,OAAOA,OCdN,IAAM+F,EAAgB,CAC3BC,gBAIF,WACE,MAAO,CACL1E,KAAMpB,EAAcC,oBALtBmF,OASF,SAAgB3F,EAAO4F,EAAWC,EAAUC,EAASC,GACnD,OAAO,SAACjE,GACN4D,EACGC,OAAO3F,EAAO4F,EAAWC,EAAUC,EAASC,GAC5C3F,MAAK,SAACC,GACL0B,aAAaC,QAAQ,WAAYC,KAAKC,UAAU7B,EAAS8B,OACzDL,EAAS,CACPH,KAAMpB,EAAcE,gBACpB2B,QAAS/B,EAAS8B,UAGrBE,OAAM,SAACC,GACNR,EAAS,CACPH,KAAMpB,EAAcG,gBACpB0B,QAASE,EAAMC,mB,WCkRV+D,EA5RA,WACb,IAAIjH,EAAUqD,cADK,EAIOC,mBAAS,IAJhB,mBAIZ3C,EAJY,KAIL4C,EAJK,OAKeD,mBAAS,IALxB,mBAKZiD,EALY,KAKDW,EALC,OAMa5D,mBAAS,IANtB,mBAMZkD,EANY,KAMFW,EANE,OAOW7D,mBAAS,IAPpB,mBAOZmD,EAPY,KAOHW,EAPG,OAQmB9D,mBAAS,IAR5B,mBAQZoD,EARY,KAQCW,EARD,KAYb5D,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAM2C,OAAO7C,eAClD6D,EAAc5D,aAAY,SAACC,GAAD,OAAWA,EAAM2C,OAAOiB,gBAClDC,EAAY9D,aAAY,SAACC,GAAD,OAAWA,EAAM2C,OAAOkB,aAGhD/E,EAAWqB,cA4DjB,OAJIwD,GACFtH,EAAQC,KAAK,iBAIb,kBAAC8D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAMN,yBAAKtE,UAAU,WACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,iBAEA,kBAACK,EAAA,EAAD,CAAMC,SA/DG,SAACpG,GAGpBA,EAAEqG,iBACFrG,EAAEsG,kBA7C0BxC,EAASsE,EAAcC,mBAiD/CrG,GAAS4F,GAAaC,GAAYC,GAAWC,GA/CjDjE,EACEsE,EAAcT,OAAO3F,EAAO4F,EAAWC,EAAUC,EAASC,MAuGhD,kBAAC5B,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,uBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,QACLiD,YAAY,gBACZC,KAAK,KACLC,MAAO9E,EACP+E,SA5GK,SAAC/G,GAAO,IACvB8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBrC,EAASkC,IA0GOI,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,uBAKF,kBAACwC,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,sBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,OACLiD,YAAY,aACZC,KAAK,KACLC,MAAOc,EACPb,SAtHS,SAAC/G,GAAO,IAC3B8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBsB,EAAazB,IAoHGI,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,4BAKF,kBAACwC,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,sBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,OACLiD,YAAY,YACZC,KAAK,KACLC,MAAOe,EACPd,SAhIQ,SAAC/G,GAAO,IAC1B8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBuB,EAAY1B,IA8HII,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,2BAKF,kBAACwC,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,sBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,OACLiD,YAAY,WACZC,KAAK,KACLC,MAAOgB,EACPf,SA1IO,SAAC/G,GAAO,IACzB8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBwB,EAAW3B,IAwIKI,UAAQ,KAGZ,kBAACf,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,0BAKF,kBAACwC,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,sBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhD,KAAK,OACL6C,GAAG,SACHK,KAAK,KACLC,MAAOiB,EAAYjB,MACnBC,SAnJW,SAAC/G,GAAO,IAC7B8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClByB,EAAe5B,IAiJCI,UAAQ,GAER,4BAAQJ,MAAM,IAAd,8BACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,+BAAd,+BAGA,4BAAQA,MAAM,qBAAd,qBAGA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,0BAAd,0BAGA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,qBAAd,qBAGA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,eAAd,iBAGJ,kBAACX,EAAA,EAAKQ,QAAQQ,SAAd,CAAuBxD,KAAK,WAA5B,0BAKF,kBAAC0D,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,KAAKlD,KAAK,UACtCmB,GACC,kBAACyC,EAAA,EAAD,CACEf,GAAG,OACHgB,UAAU,SACVX,KAAK,KACLO,KAAK,SACLK,cAAY,SAPlB,mBAYCoB,GACC,kBAACrD,EAAA,EAAKK,KAAN,8DAMJ,kBAACL,EAAA,EAAKK,KAAN,wBACkB,uBAAGI,KAAK,UAAR,WADlB,eC/NC6C,G,OA/DK,WACJ/E,aAAagF,QAAQ,gBACnC,OACE,kBAAC3D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,0DATR,YAmBA,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAMN,yBAAKtE,UAAU,eACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,sBAEA,kBAACN,EAAA,EAAKK,KAAN,4FAIA,kBAACL,EAAA,EAAKK,KAAN,KACE,uBAAGI,KAAK,KAAR,qBADF,2CCrDD+C,EAAc,CACzBC,cAKF,SAAuBjH,GACrB,OAAOE,IACJC,KAAKP,EAAIC,aAAJ,uBAA2C,CAC/CG,MAAOA,IAERI,MAAK,SAACC,GACL,OAAOA,MAVXwC,YAcF,SAAqBqE,EAAWC,EAAWC,EAAKC,GAC9C,OAAOnH,IACJC,KAAKP,EAAIC,aAAJ,+BAAmD,CACvDyH,cAAeJ,EACfK,cAAeJ,EACfC,IAAKA,EACLC,MAAOA,IAERjH,MAAK,SAACC,GACL,OAAOA,MAtBXmH,eA0BF,SAAwBC,EAAaP,EAAWC,GAC9C,OAAOjH,IACJC,KAAKP,EAAIC,aAAJ,wBAA4C,CAChD6H,aAAcD,EACdH,cAAeJ,EACfK,cAAeJ,IAEhB/G,MAAK,SAACC,GACL,OAAOA,OCpCb,IAAMhB,EAAUoC,cAEHkG,EAAkB,CAC7BC,uBAQF,WACE,MAAO,CACLjG,KAAMpB,EAAcQ,2BATtB8G,qBAaF,WACE,MAAO,CACLlG,KAAMpB,EAAcW,yBAdtB4G,wBAkBF,WACE,MAAO,CACLnG,KAAMpB,EAAcc,4BAnBtB4F,cAuBF,SAAuBjH,GACrB,OAAO,SAAC8B,GACNkF,EACGC,cAAcjH,GACdI,MAAK,SAACC,GACLyB,EAAS,CACPH,KAAMpB,EAAcS,uBACpBoB,QAAS/B,EAAS8B,UAGrBE,OAAM,SAACC,GACNR,EAAS,CACPH,KAAMpB,EAAcU,uBACpBmB,QAASE,SAnCjBO,YAyCF,SAAqBqE,EAAWC,EAAWC,EAAKC,GAC9C,OAAO,SAACvF,GACNkF,EACGnE,YAAYqE,EAAWC,EAAWC,EAAKC,GACvCjH,MAAK,SAACC,GACLyB,EAAS,CACPH,KAAMpB,EAAcY,qBACpBiB,QAAS/B,EAAS8B,UAGrBE,OAAM,SAACC,GACNR,EAAS,CACPH,KAAMpB,EAAca,qBACpBgB,QAASE,SArDjBkF,eA2DF,SAAwBC,EAAaP,EAAWC,GAC9C,OAAO,SAACrF,GACNkF,EACGnE,YAAY4E,EAAaP,EAAWC,GACpC/G,MAAK,SAACC,GACLyB,EAAS,CACPH,KAAMpB,EAAce,wBACpBc,QAAS/B,EAAS8B,OAEpB9C,EAAQC,KAAK,eAEd+C,OAAM,SAACC,GACNR,EAAS,CACPH,KAAMpB,EAAcgB,wBACpBa,QAASE,U,WCuEJyF,EA1IO,WACpB,IAAM1I,EAAUqD,cADU,EAIAC,mBAAS,IAJT,mBAInB3C,EAJmB,KAIZ4C,EAJY,KAQpBE,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAM/C,SAAS6C,eACpDkF,EAAyBjF,aAC7B,SAACC,GAAD,OAAWA,EAAM/C,SAAS+H,0BAEtBnB,EAAY9D,aAChB,SAACC,GAAD,OAAWA,EAAM/C,SAASgI,0BAItBnG,EAAWqB,cA8BjB,OAJI6E,GACF3I,EAAQC,KAAK,uBAIb,kBAAC8D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAON,yBAAKtE,UAAU,iBACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,SAAN,wDAEiB,IACjB,6BACA,kBAACI,EAAA,EAAD,CAAMC,SAnEG,SAACpG,GAGpBA,EAAEqG,iBACFrG,EAAEsG,kBAdFxC,EAAS6F,EAAgBC,0BAkBrB5H,GAjBsB8B,EAAS6F,EAAgBV,cAAcjH,MA8ErD,kBAACmE,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,uBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,QACLiD,YAAY,gBACZC,KAAK,KACLC,MAAO9E,EACP+E,SApFK,SAAC/G,GAAO,IACvB8G,EAAU9G,EAAEgH,OAAZF,MACJA,EAAMG,QAAU,GAClBrC,EAASkC,IAkFOI,UAAQ,MAId,kBAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,KAAKlD,KAAK,UACtCmB,GACC,kBAACyC,EAAA,EAAD,CACEf,GAAG,OACHgB,UAAU,SACVX,KAAK,KACLO,KAAK,SACLK,cAAY,SAPlB,kBAYCoB,GACC,kBAACrD,EAAA,EAAKK,KAAN,kDAKJ,kBAACL,EAAA,EAAKK,KAAN,6B,gCC1ECqE,G,8KAlEX,OACE,kBAAC9E,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAMN,yBAAKtE,UAAU,oBACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,kCAEA,kBAACN,EAAA,EAAKO,SAAN,6FAIA,kBAACP,EAAA,EAAKK,KAAN,KACE,uBAAGI,KAAK,KAAR,qBADF,oCAIA,kBAACT,EAAA,EAAKK,KAAN,sBACA,kBAACL,EAAA,EAAKK,KAAN,CAAWlE,UAAU,YAArB,aACY,uBAAGsE,KAAK,YAAR,cADZ,0B,GAxDekE,cCqLhBC,G,OAxKK,WAClB,IAAI/I,EAAUqD,cACV2F,EAAQC,cAFY,EAKc3F,mBAAS,IALvB,mBAKjB4F,EALiB,KAKJC,EALI,OAMsB7F,mBAAS,IAN/B,mBAMjB8F,EANiB,KAMAC,EANA,KASlBtB,EAAMiB,EAAMM,OAAOvB,IACnBC,EAAQgB,EAAMM,OAAOtB,MAGrBR,EAAY9D,aAAY,SAACC,GAAD,OAAWA,EAAM/C,SAAS4G,aAClD+B,EAAuB7F,aAC3B,SAACC,GAAD,OAAWA,EAAM/C,SAAS2I,wBAEtB9F,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAM/C,SAAS6C,eAGpDhB,EAAWqB,cA0CjB,OAJIyF,GACFvJ,EAAQC,KAAK,eAIb,kBAAC8D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAON,yBAAKtE,UAAU,SACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,SAAN,+BAFF,IAEwD,6BACtD,kBAACI,EAAA,EAAD,CAAMC,SAhEG,SAACpG,GAIpBA,EAAEqG,iBACFrG,EAAEsG,kBA3BFxC,EAAS6F,EAAgBE,wBA8BrBU,GAAeE,GAAmBF,IAAgBE,GA5BtD3G,EACE6F,EAAgB9E,YAAY0F,EAAaE,EAAiBrB,EAAKC,MAqFrD,kBAAClD,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,qBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,eACZC,KAAK,KACLC,MAAOyD,EACPxD,SA1FW,SAAC/G,GAAO,IAC7B8G,EAAU9G,EAAEgH,OAAZF,MAEJA,EAAMG,QAAU,GAClBuD,EAAe1D,IAuFCI,UAAQ,MAKd,kBAACf,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,qBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,mBACZC,KAAK,KACLC,MAAO2D,EACP1D,SAhGe,SAAC/G,GAAO,IACjC8G,EAAU9G,EAAEgH,OAAZF,MAEJA,EAAMG,QAAU,GAClByD,EAAmB5D,IA6FHI,UAAQ,MAId,kBAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,KAAKlD,KAAK,UACtCmB,GACC,kBAACyC,EAAA,EAAD,CACEf,GAAG,OACHgB,UAAU,SACVX,KAAK,KACLO,KAAK,SACLK,cAAY,SAPlB,mBAYC8C,IAAgBE,GACf,kBAACjF,EAAA,EAAKK,KAAN,gDAEDgD,GACC,kBAACrD,EAAA,EAAKK,KAAN,2CAGJ,kBAACL,EAAA,EAAKK,KAAN,uBACA,kBAACL,EAAA,EAAKK,KAAN,CAAWlE,UAAU,YAArB,aACY,uBAAGsE,KAAK,YAAR,cADZ,wBCsCC4E,G,OAnMQ,WACrB,IAAIxJ,EAAUqD,cADa,EAGWC,mBAAS,IAHpB,mBAGpB4F,EAHoB,KAGPC,EAHO,OAImB7F,mBAAS,IAJ5B,mBAIpB8F,EAJoB,KAIHC,EAJG,OAKW/F,mBAAS,IALpB,mBAKpB8E,EALoB,KAKPqB,EALO,OAMOnG,oBAAS,GANhB,mBAMToG,GANS,WAQrBjG,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAM/C,SAAS6C,eACpDkG,EAA0BjG,aAC9B,SAACC,GAAD,OAAWA,EAAM/C,SAAS+I,2BAEtBC,EAA0BlG,aAC9B,SAACC,GAAD,OAAWA,EAAM/C,SAASgJ,2BAGtBnH,EAAWqB,cAwDjB,OAJI6F,GACF3J,EAAQC,KAAK,eAIb,kBAAC8D,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAON,yBAAKtE,UAAU,SACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,wBACA,kBAACN,EAAA,EAAKO,SAAN,+CAEiB,IACjB,6BACA,kBAACI,EAAA,EAAD,CAAMC,SAzEG,SAACpG,GACPA,EAAEkL,cAEflL,EAAEqG,iBACFrG,EAAEsG,kBAlCFxC,EAAS6F,EAAgBG,2BAuCvBL,GACAc,GACAE,GACAF,IAAgBE,GAxClB3G,EACE6F,EAAgBH,eAAeC,EAAac,EAAaE,IA4C3DM,GAAa,KA0DD,kBAAC5E,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,qBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,eACZC,KAAK,KACLC,MAAO2C,EACP1C,SA3FW,SAAC/G,GAAO,IAC7B8G,EAAU9G,EAAEgH,OAAZF,MAEJA,EAAMG,OAAS,GACjB6D,EAAehE,IAwFCI,UAAQ,MAKd,kBAACf,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,qBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,eACZC,KAAK,KACLC,MAAOyD,EACPxD,SAzHW,SAAC/G,GAAO,IAC7B8G,EAAU9G,EAAEgH,OAAZF,MAEJA,EAAMG,OAAS,GACjBuD,EAAe1D,IAsHCI,UAAQ,MAKd,kBAACf,EAAA,EAAKI,MAAN,CAAYC,GAAIlB,IAAKmB,UAAU,qBAC7B,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,GACP,kBAACP,EAAA,EAAKQ,QAAN,CACEhF,UAAU,QACVgC,KAAK,WACLiD,YAAY,mBACZC,KAAK,KACLC,MAAO2D,EACP1D,SA/He,SAAC/G,GAAO,IACjC8G,EAAU9G,EAAEgH,OAAZF,MAEJA,EAAMG,OAAS,GACjByD,EAAmB5D,IA4HHI,UAAQ,MAId,kBAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,KAAKlD,KAAK,UACtCmB,GACC,kBAACyC,EAAA,EAAD,CACEf,GAAG,OACHgB,UAAU,SACVX,KAAK,KACLO,KAAK,SACLK,cAAY,SAPlB,mBAYC8C,IAAgBE,GACf,kBAACjF,EAAA,EAAKK,KAAN,gDAEDoF,GACC,kBAACzF,EAAA,EAAKK,KAAN,2CAGJ,kBAACL,EAAA,EAAKK,KAAN,uBACA,kBAACL,EAAA,EAAKK,KAAN,CAAWlE,UAAU,YAArB,aACY,uBAAGsE,KAAK,YAAR,cADZ,wBClICkF,G,8KAjEX,OACE,kBAAC/F,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,iBACb,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,MACZ,kBAACH,EAAA,EAAKI,WAAN,KACE,kBAACJ,EAAA,EAAKK,KAAN,yBACA,kBAACL,EAAA,EAAKM,MAAN,uBACiB,6BADjB,YAGA,kBAACN,EAAA,EAAKO,SAAN,2DACqD,6BADrD,2DAUR,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,wBAAIrE,UAAU,sBACZ,4BACE,uBAAGA,UAAU,YAAb,iCAEF,4BACE,uBAAGA,UAAU,WAAWsE,KAAK,KAA7B,eAIF,4BACE,uBAAGtE,UAAU,WAAWsE,KAAK,KAA7B,oBAON,yBAAKtE,UAAU,mBACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,SAAN,sFAKA,kBAACP,EAAA,EAAKK,KAAN,KACE,uBAAGI,KAAK,UAAR,SADF,qBAGA,kBAACT,EAAA,EAAKK,KAAN,CAAWlE,UAAU,YAArB,aACY,uBAAGsE,KAAK,YAAR,cADZ,0B,GAvDckE,c,0GC8LfiB,I,8KA/KX,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAK1J,UAAU,cACb,kBAAC6D,EAAA,EAAD,CAAMU,OAAO,SACX,kBAACV,EAAA,EAAK8F,KAAN,KACE,kBAAC9F,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,SAAN,mDAON,kBAACX,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,YAAf,mBAIJ,kBAAC2D,EAAA,EAAD,CAAKiG,GAAI,GACP,kBAAChG,EAAA,EAAD,KACE,kBAACiG,EAAA,EAAD,CACEC,QAAQ,QACRC,QACE,kBAACC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACsE,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,mBAGJC,UAAU,cAEV,8BACE,kBAACxE,EAAA,EAAD,CAAQC,QAAQ,IACd,yBAAK3F,UAAU,uBAAf,6BAGA,yBAAKA,UAAU,sBAAf,wBAKR,kBAAC4D,EAAA,EAAD,KACE,kBAACiG,EAAA,EAAD,CACEC,QAAQ,QACRC,QACE,kBAACC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACsE,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,mBAGJC,UAAU,cAEV,8BACE,kBAACxE,EAAA,EAAD,CAAQC,QAAQ,IACd,yBAAK3F,UAAU,uBAAf,yBAIA,yBAAKA,UAAU,sBAAf,oBAKR,kBAAC4D,EAAA,EAAD,KACE,kBAACiG,EAAA,EAAD,CACEC,QAAQ,QACRC,QACE,kBAACC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACsE,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,kBAGJC,UAAU,cAEV,8BACE,kBAACxE,EAAA,EAAD,CAAQC,QAAQ,IACd,yBAAK3F,UAAU,uBAAf,kCAGA,yBAAKA,UAAU,sBAAf,+BAOR,kBAAC4D,EAAA,EAAD,KACE,kBAACiG,EAAA,EAAD,CACEC,QAAQ,QACRC,QACE,kBAACC,EAAA,EAAD,CAAWrE,QAAQ,SACjB,kBAACsE,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,mBAGJC,UAAU,cAEV,8BACE,kBAACxE,EAAA,EAAD,CAAQC,QAAQ,IACd,yBAAK3F,UAAU,uBAAf,gCAGA,yBAAKA,UAAU,sBAAf,4BAQZ,kBAACyD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAK5D,UAAU,YAAf,kBAIJ,kBAAC2D,EAAA,EAAD,CAAKiG,GAAI,GACP,kBAAChG,EAAA,EAAD,KACE,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,IACd,kBAAClC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAOC,IAAKoG,KAAUC,SAAO,EAACC,WAAS,KAEzC,kBAACzG,EAAA,EAAD,qDAKR,kBAACA,EAAA,EAAD,KACE,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,IACd,kBAAClC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAOC,IAAKuG,KAAUF,SAAO,EAACC,WAAS,KAEzC,kBAACzG,EAAA,EAAD,wBAKR,kBAACA,EAAA,EAAD,KACE,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,IACd,kBAAClC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAOC,IAAKwG,KAAUH,SAAO,EAACC,WAAS,KAEzC,kBAACzG,EAAA,EAAD,+BAKR,kBAACA,EAAA,EAAD,KACE,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,IACd,kBAAClC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAOC,IAAKyG,KAAUJ,SAAO,EAACC,WAAS,KAEzC,kBAACzG,EAAA,EAAD,wC,GArKK4E,c,wECkCViC,OA9Cf,SAAuBlL,GACnB,OACI,kBAAC8E,EAAA,EAAD,KACI,kBAACZ,EAAA,EAAD,CAAWC,OAAK,GAChB,kBAACW,EAAA,EAAOqG,MAAR,CAAcpG,KAAK,SAAnB,oBACA,kBAACqG,GAAA,EAAD,CAAK3K,UAAU,kCAAkC4K,UAAWrL,EAAMsL,YAC9D,kBAACF,GAAA,EAAIG,KAAL,KACI,kBAACH,GAAA,EAAII,KAAL,CAAUzG,KAAK,iBAAf,kBAEJ,kBAACqG,GAAA,EAAIG,KAAL,KACI,kBAACH,GAAA,EAAII,KAAL,CAAUzG,KAAK,mBAAf,qBAMR,kBAAC0G,GAAA,EAAD,CAAaC,MAAO1L,EAAM2L,OAAQjN,GAAG,oBAAoBkN,YAAU,GAE/D,kBAACH,GAAA,EAAYF,KAAb,KACI,4BAAKvL,EAAM2L,QACX,uBAAGlL,UAAU,cAAcT,EAAM4G,UAErC,wBAAInG,UAAU,cACd,kBAACgL,GAAA,EAAYF,KAAb,CAAkBxG,KAAK,KAAvB,oBAGA,kBAAC0G,GAAA,EAAYF,KAAb,CAAkBxG,KAAK,KAAvB,wBAGA,wBAAItE,UAAU,eACd,kBAACgL,GAAA,EAAYF,KAAb,CAAkBxG,KAAK,IAAI8G,UAAQ,GAAnC,gBAGA,kBAACJ,GAAA,EAAYF,KAAb,CAAkBxG,KAAK,IAAI8G,UAAQ,GAAnC,oBAGA,wBAAIpL,UAAU,eACd,kBAACgL,GAAA,EAAYF,KAAb,CAAkBxG,KAAK,UAAvB,c,oBCnCD+G,I,OANA,SAASC,GACpB,IACIC,EADUC,MACAC,CAAO,KAAOH,EAAY,QACxC,OAAO,yBAAKvH,IAAKwH,EAASG,IAAKJ,MCyJpBK,OAxJf,SAAsBpM,GAElB,IAEMqM,EAA4B,YAArBrM,EAAMsM,WAFC,CAAC,WAAW,SAAS,WACnB,CAAC,OAAO,WAOxBC,EAAU,WACZ,OAAOrN,OAAOD,KAAKe,EAAMwM,WAAW,KAmBlCC,EAAY,WACd,OAAO,kBAACC,GAAA,EAAD,CAAShO,GAAG,iBACf,kBAACgO,GAAA,EAAQ9H,MAAT,CAAenE,UAAU,cAAzB,gBACA,kBAACiM,GAAA,EAAQC,QAAT,KACI,kBAACxG,EAAA,EAAD,CAAQyG,SAAS,YAAYd,GAAO,WAApC,sBAmGZ,OACI,kBAAC5H,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,YAAU,EAACvM,UAAU,6BACzC,2BAAOA,UAAU,0BACb,4BA3HJ8L,IACChO,KAAI,SAAA0O,GAEb,OAAOA,GACH,IAAK,UAAW,OAAO,wBAAItN,IAAKsN,GAAOA,GACvC,IAAK,oBAAqB,OAAO,wBAAItN,IAAKsN,EAAMxM,UAAU,eAAewM,GACzE,IAAK,cAAe,OAAO,wBAAItN,IAAKsN,GAAOA,GAC3C,IAAK,SACL,IAAK,mBACL,IAAK,uBAAwB,OAAO,wBAAItN,IAAKsN,EAAMxM,UAAU,eAAewM,GAC5E,QAAS,OAAO,SAlBjBZ,EAAK9N,KAAI,SAAA2O,GAAG,OAAI,wBAAIvN,IAAKuN,SAwIpB,+BAlGA,WACZ,IAAIC,EAAQnN,EAAMwM,WACdvN,EAAOsN,IAEX,OADAtN,EAAOA,EAAKmO,OAAOf,GACZc,EAAM5O,KAAI,SAAC2O,EAAKG,GAEnB,MAAyB,YAArBrN,EAAMsM,WACgB,sBAAlBY,EAAG,OACI,wBAAIvN,IAAK0N,EAAOC,MAAO,CAACC,WAAY,kBACtCtO,EAAKV,KAAI,SAAAoB,GAEN,OAAOA,GACH,IAAK,UAAW,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAA2ByM,EAAIvN,IAC9E,IAAK,oBAAqB,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,uCAAuCyM,EAAIvN,IACpG,IAAK,cAAe,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAA2ByM,EAAIvN,IAClF,IAAK,SAAU,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,uCAAuCyM,EAAIvN,IACzF,IAAK,WAAY,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAC5C,uBAAGsE,KAAMmI,EAAG,KAAUzM,UAAU,2BAAhC,4BAEJ,IAAK,SAAU,OAAO,wBAAId,IAAKA,EAAKc,UAAU,2BAC1C,uBAAGsE,KAAK,iBAAiBtE,UAAU,wBAAnC,YAAoEqL,GAAO,cAE/E,IAAK,UAAW,OACZ,wBAAInM,IAAKA,EAAKc,UAAU,eACpB,kBAAC6J,EAAA,EAAD,CAAgBC,QAAQ,QAAQI,UAAU,SAASH,QAASiC,KACxD,kBAACtG,EAAA,EAAD,CAAQyG,SAAS,uBAAuBd,GAAO,WAI3D,QAAS,OAAO,UAKrB,wBAAInM,IAAK0N,GACXpO,EAAKV,KAAI,SAAAoB,GAEN,OAAOA,GACH,IAAK,UAAW,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,eAAeyM,EAAIvN,IAClE,IAAK,oBAAqB,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAA2ByM,EAAIvN,IACxF,IAAK,cAAe,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,eAAeyM,EAAIvN,IACtE,IAAK,SAAU,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,sCAAsCyM,EAAIvN,IACxF,IAAK,WAAY,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAC5C,uBAAGsE,KAAMmI,EAAG,KAAUzM,UAAU,2BAAhC,4BAEJ,IAAK,SAAU,OAAO,wBAAId,IAAKA,EAAKc,UAAU,2BAC1C,uBAAGsE,KAAK,iBAAiBtE,UAAU,cAAnC,wBAEJ,IAAK,UAAW,OACZ,wBAAId,IAAKA,EAAKc,UAAU,eACpB,kBAAC6J,EAAA,EAAD,CAAgBC,QAAQ,QAAQI,UAAU,SAASH,QAASiC,KACxD,kBAACtG,EAAA,EAAD,CAAQyG,SAAS,uBAAuBd,GAAO,WAI3D,QAAS,OAAO,UAMzB,wBAAInM,IAAK0N,GACfpO,EAAKV,KAAI,SAAAoB,GAEN,OAAOA,GACH,IAAK,UAAW,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,eAAeyM,EAAIvN,IAClE,IAAK,oBAAqB,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAA2ByM,EAAIvN,IACxF,IAAK,cAAe,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,eAAeyM,EAAIvN,IACtE,IAAK,mBACL,IAAK,uBAAwB,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BAA2ByM,EAAIvN,IAC3F,IAAK,OAAQ,OAAO,wBAAIA,IAAKA,EAAKc,UAAU,2BACxC,uBAAGsE,KAAK,mBAAmBtE,UAAU,cAArC,iBAEJ,IAAK,UAAW,OACZ,wBAAId,IAAKA,EAAKc,UAAU,eACpB,kBAAC6J,EAAA,EAAD,CAAgBC,QAAQ,QAAQI,UAAU,SAASH,QAhFpE,kBAACkC,GAAA,EAAD,CAAShO,GAAG,mBAiFS,kBAACyH,EAAA,EAAD,CAAQyG,SAAS,uBAAuBd,GAAO,WAI3D,QAAS,OAAO,aAmBf0B,Q,OC3DVC,OAlFf,SAAsBzN,GAClB,IADyB,EAMWyD,mBAAS,KANpB,mBAMlBiK,EANkB,KAMNC,EANM,KAmBzB,OACI,yBAAKlN,UAAU,YACf,kBAACmN,GAAD,CAAetC,WAAW,gBAAgBK,OAnB/B,WAmB+C/E,QAlB9C,4CAmBZ,kBAAC1C,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAK3D,UAAU,QACX,kBAAC4D,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACzJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwJ,GAAI,EAAGpN,UAAU,WAClB,8CAtBH,GAsBG,MAEJ,kBAAC4D,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACzJ,EAAA,EAAD,KACI,uBAAG3D,UAAU,WAAb,WAxBb,CACX,CAACqN,KAAK,MAAOlI,MAAM,KACnB,CAACkI,KAAK,SAAUlI,MAAM,MACtB,CAACkI,KAAK,cAAelI,MAAM,MAsBSrH,KAAI,SAACwP,EAAOC,GAAR,OACZ,kBAACC,GAAA,EAAD,CAAaC,QAAM,GACf,kBAACC,GAAA,EAAD,CACIxO,IAAKqO,EACLvL,KAAK,QACLqL,KAAK,SACLlI,MAAOmI,EAAMnI,MACbnF,UAAW,qCACX2N,QAASV,IAAeK,EAAMnI,MAC9BC,SAAU,SAAC/G,GAAD,OAAO6O,EAAc7O,EAAEkL,cAAcpE,SAE9CmI,EAAMD,cAQnC,kBAACzJ,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACzJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwJ,GAAI,CAACQ,KAAM,EAAGC,OAAQ,GAAIhB,MAAO,CAACiB,QAAS,OAAQC,eAAgB,aACpE,kBAACvJ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKwJ,MAAN,CAAYC,QAAQ,gCAAgCC,QAAM,GAA1D,UACA,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWjK,KAAZ,KACKmH,GAAO,YAGhB,kBAACgD,GAAA,EAAD,CAAcpQ,GAAG,gCAAgCgH,YAAY,sBAIzE,kBAACrB,EAAA,EAAD,CAAKwJ,GAAI,EAAGP,MAAO,CAACiB,QAAS,OAAQC,eAAgB,aACjD,kBAACrI,EAAA,EAAD,CAAQyG,SAAS,kCAAjB,kBAKhB,kBAACxI,EAAA,EAAD,CAAK3D,UAAU,kBACX,kBAAC4D,EAAA,EAAD,KACI,kBAAC,GAAD,CAAcmI,WA9DX,CACf,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,OAAU,cAAe,KAAQ,kBAC9G,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,OAAU,cAAe,KAAQ,kBAC9G,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,OAAU,oBAAqB,KAAQ,kBACpH,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,OAAU,cAAe,KAAQ,mBA0D5DF,WAzEnC,iB,gBCqHRyC,ICrBAzP,GA5FA,CACb,CACEe,UAAWC,EACXhB,OAAQ,CACN,CACEM,KAAM,IACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,OACNzN,UAAWG,GAEb,CACEZ,KAAM,SACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,QACNzN,UAAWkD,GAEb,CACE3D,KAAM,WACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,SACNzN,UAAW+G,GAEb,CACExH,KAAM,gBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,cACNzN,UAAWuH,GAEb,CACEhI,KAAM,kBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,gBACNzN,UAAWwI,GAEb,CACEjJ,KAAM,sBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,mBACNzN,UAAW2I,GAEb,CACEpJ,KAAM,sBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,cACNzN,UAAW6I,GAEb,CACEtJ,KAAM,mBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,iBACNzN,UAAWsJ,GAEb,CACE/J,KAAM,mBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,kBACNzN,UAAW4J,GAEb,CACErK,KAAM,cACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,aACNzN,UAAW6J,IAEb,CACEtK,KAAM,gBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,eACNzN,UAAWoN,IAEb,CACE7N,KAAM,kBACNC,OAAO,EACPC,QAAQ,EACRgO,KAAM,iBACNzN,UD1FR,WAuBI,OACI,yBAAKI,UAAU,YACX,kBAACmN,GAAD,CAAetC,WAAW,kBAAkBK,OAvBrC,WAuBqD/E,QAtBpD,4CAuBR,kBAAC1C,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAK3D,UAAU,QACX,kBAAC4D,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACzJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwJ,GAAI,GACL,6CAEJ,kBAACxJ,EAAA,EAAD,CAAKwJ,GAAI,GAEL,kBAACmB,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,CAAaxJ,GAAG,SAAS7E,UAAU,aAzB5C,CACnB,CAACmF,MAAM,YAAaqJ,MAAM,aAC1B,CAACrJ,MAAM,aAAcqJ,MAAM,cAC3B,CAACrJ,MAAM,QAASqJ,MAAO,UAuByB1Q,KAAI,SAAC2Q,EAAI7B,GACrB,OAAO,4BAAQzH,MAAOsJ,EAAItJ,MAAOjG,IAAK0N,GAAQ6B,EAAID,eAO1E,kBAAC5K,EAAA,EAAD,CAAKwJ,GAAI,CAACQ,KAAK,EAAGC,OAAO,IACrB,kBAACnI,EAAA,EAAD,CAAQyG,SAAS,kCAAjB,gBAGR,kBAACxI,EAAA,EAAD,CAAK3D,UAAU,QACX,kBAAC4D,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACvJ,EAAA,EAAD,CAAM7D,UAAU,eACZ,kBAAC6D,EAAA,EAAK8F,KAAN,KACI,kBAAC9F,EAAA,EAAKO,SAAN,CAAepE,UAAU,YAAzB,yBACA,kBAAC6D,EAAA,EAAKM,MAAN,CAAYnE,UAAU,sBAtC/B,IAuCS,kBAAC6D,EAAA,EAAKK,KAAN,oBAtCT,OA0CH,kBAACN,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACvJ,EAAA,EAAD,CAAM7D,UAAU,eACZ,kBAAC6D,EAAA,EAAK8F,KAAN,KACI,kBAAC9F,EAAA,EAAKO,SAAN,CAAepE,UAAU,YAAzB,kBACA,kBAAC6D,EAAA,EAAKM,MAAN,CAAYnE,UAAU,sBA7C9B,OA8CQ,kBAAC6D,EAAA,EAAKK,KAAN,6BA7CV,QAiDF,kBAACN,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACvJ,EAAA,EAAD,CAAM7D,UAAU,cACZ,kBAAC6D,EAAA,EAAK8F,KAAN,KACI,kBAAC9F,EAAA,EAAKO,SAAN,CAAepE,UAAU,YAAzB,oBACA,kBAAC6D,EAAA,EAAKM,MAAN,CAAYnE,UAAU,qBApDjC,KAqDW,kBAAC6D,EAAA,EAAKK,KAAN,KAAY,WAIxB,kBAACN,EAAA,EAAD,CAAKwJ,GAAI,GACL,kBAACvJ,EAAA,EAAD,CAAM7D,UAAU,gBACZ,kBAAC6D,EAAA,EAAK8F,KAAN,KACI,kBAAC9F,EAAA,EAAKO,SAAN,CAAepE,UAAU,YAAzB,wBACA,kBAAC6D,EAAA,EAAKM,MAAN,CAAYnE,UAAU,YA5DjC,IA6DW,kBAAC6D,EAAA,EAAKK,KAAN,KAAY,YAK5B,kBAACP,EAAA,EAAD,CAAK3D,UAAU,QACX,kBAAC4D,EAAA,EAAD,CAAKwJ,GAAI,GACL,gDAEJ,kBAACxJ,EAAA,EAAD,CAAKwJ,GAAI,CAACQ,KAAK,EAAGC,OAAO,IACrB,kBAACrJ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKwJ,MAAN,CAAYC,QAAQ,gCAAgCC,QAAM,GAA1D,UAGA,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWjK,KAAZ,KACKmH,GAAO,YAGhB,kBAACgD,GAAA,EAAD,CAAcpQ,GAAG,gCAAgCgH,YAAY,uBAK7E,kBAACtB,EAAA,EAAD,CAAK3D,UAAU,kBACX,kBAAC4D,EAAA,EAAD,KACI,kBAAC,GAAD,CAAcmI,WAxGf,CACf,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,mBAAoB,EAAG,uBAAwB,GAC5H,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,mBAAoB,EAAG,uBAAwB,GAC5H,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,mBAAoB,EAAG,uBAAwB,GAC5H,CAAC,UAAW,MAAO,oBAAqB,IAAK,cAAe,gBAAiB,mBAAoB,EAAG,uBAAwB,IAoGtEF,WA5GzC,uBECD6C,QACW,cAA7BC,OAAOnP,SAASoP,UAEe,UAA7BD,OAAOnP,SAASoP,UAEhBD,OAAOnP,SAASoP,SAASlG,MACvB,2D,sCChBAmG,GAAc,CAClB1L,aAAa,GCDf,IAAM0L,GAAc,CAClB1L,aAAa,GCDf,IAAM0L,GAAc,GCIpB,IAMeC,GANKC,aAAgB,CAClC3O,MHDa,WAA6C,IAA9BiD,EAA6B,uDAArBwL,GAAaG,EAAQ,uCACzD,OAAQA,EAAOhN,MACb,KAAKpB,EAAcI,gBAEjB,OADAiB,QAAQC,IAAI,2BACL,CACLiB,aAAa,EACb8L,KAAMD,EAAOC,MAGjB,KAAKrO,EAAcK,cAEjB,OADAgB,QAAQC,IAAI,iBACL,CACLoB,YAAY,EACZ2L,KAAMD,EAAOC,MAGjB,KAAKrO,EAAcM,cACjB,MAAO,CACLqC,YAAY,GAGhB,KAAK3C,EAAcO,OACjB,MAAO,CACLmC,YAAY,GAGhB,QACE,OAAOD,IGzBX2C,OFFa,WAAqD,IAA9B3C,EAA6B,uDAArBwL,GAAaG,EAAQ,uCACjE,OAAQA,EAAOhN,MACb,KAAKpB,EAAcC,kBACjB,MAAO,CACLsC,aAAa,GAGjB,KAAKvC,EAAcE,gBACjB,MAAO,CACLmG,cAAc,GAGlB,KAAKrG,EAAcG,gBACjB,MAAO,CACLmG,WAAW,GAGf,QACE,OAAO7D,IEfX/C,SDLa,WAAuD,IAA9B+C,EAA6B,uDAArBwL,GAAaG,EAAQ,uCACnE,OAAQA,EAAOhN,MACb,KAAKpB,EAAcQ,yBACjB,MAAO,CACL+B,aAAa,GAGjB,KAAKvC,EAAcS,uBACjB,MAAO,CACLgH,wBAAwB,GAG5B,KAAKzH,EAAcU,uBACjB,MAAO,CACL4F,WAAW,GAGf,KAAKtG,EAAcW,uBACjB,MAAO,CACL4B,aAAa,GAGjB,KAAKvC,EAAcY,qBACjB,MAAO,CACLyH,sBAAsB,GAG1B,KAAKrI,EAAca,qBACjB,MAAO,CACLyF,WAAW,GAGf,KAAKtG,EAAcc,0BACjB,MAAO,CACLyB,aAAa,GAGjB,KAAKvC,EAAce,wBACjB,MAAO,CACL0H,yBAAyB,GAG7B,KAAKzI,EAAcgB,wBACjB,MAAO,CACL0H,yBAAyB,GAE7B,QACE,OAAOjG,ME7CP6L,GAAmBC,0BAUVC,GARDC,aACVC,GACAC,aACIC,KACAN,KCARO,IAASnQ,OACL,kBAAC,IAAMoQ,WAAP,KACI,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,IAAD,KACMtP,EAA0BjB,OAIxC8Q,SAASC,eAAe,SN+GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtP,MAAK,SAAAuP,GACJA,EAAaC,gBAEdvN,OAAM,SAAAC,GACLV,QAAQU,MAAMA,EAAMuN,a,wCOzI5BtS,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.6a712d28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mask Group.eeb51421.png\";","var map = {\n\t\"./dots.svg\": 141,\n\t\"./download.svg\": 142,\n\t\"./notify.svg\": 143,\n\t\"./options.svg\": 144,\n\t\"./reupload.svg\": 145,\n\t\"./search.svg\": 146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 140;","module.exports = __webpack_public_path__ + \"static/media/dots.d1711adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.37cb05f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/notify.652f7642.svg\";","module.exports = __webpack_public_path__ + \"static/media/options.49823a70.svg\";","module.exports = __webpack_public_path__ + \"static/media/reupload.f36eaf28.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.469d6625.svg\";","import createHistory from \"history/createBrowserHistory\";\nexport default createHistory();","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport history from \"../../utils/history\";\n\nexport const renderRoutes = (routes, extraProps = {}, switchProps = {}) => {\n  if (!routes) return null;\n  return (\n    <Switch {...switchProps}>\n      {routes.map((route, i) => (\n        <Route\n          key={route.key || i}\n          path={route.path}\n          exact={route.exact}\n          strict={route.strict}\n          render={(props) => {\n            const location = route.check && route.check(props);\n            if (location) {\n              props.history.push(location);\n              return null;\n            }\n            return <route.component {...props} {...extraProps} route={route} />;\n          }}\n          history={history}\n        />\n      ))}\n    </Switch>\n  );\n};\n","import React, { Fragment } from 'react';\nimport * as routeService from '../../services/route/routeService';\n\nconst Wrapper = (props) => {\n  const { route } = props;\n  return (\n    <Fragment>\n      <div>{routeService.renderRoutes(route.routes)}</div>\n    </Fragment>\n  );\n};\n\nexport default Wrapper;","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    // console.log(this.props),\n    (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome to Tapestry-Pooling! Watch this space.</h1>\n        </header>\n      </div>\n    )\n  );\n};\n\nexport default App;\n","const url = {\n  // BASE_API_URL: \"https://tapestry-pooling-284109.ew.r.appspot.com/\",\n  BASE_API_URL: \"http://127.0.0.1:8000/\"\n};\n\nexport default url;\n","import axios from \"axios\";\nimport url from \"../../constants/url\";\n\nexport const loginApi = {\n  login,\n  logout,\n};\n\nfunction login(email, password) {\n  return axios\n    .post(url.BASE_API_URL + \"auth/login/\", {\n      email: email,\n      password: password,\n    })\n    .then((response) => {\n      return response;\n    });\n}\n\nfunction logout() {\n  return axios.post(url.BASE_API_URL + \"auth/logout\").then((response) => {\n    return response;\n  });\n}\n","const authConstants = {\n\n  SIGN_UP_REQUESTED: \"SIGN_UP_REQUESTED\",\n  SIGN_UP_SUCCESS: \"SIGN_UP_SUCCESS\",\n  SIGN_UP_FAILURE: \"SIGN_UP_FAILURE\",\n\n  LOGIN_REQUESTED: \"LOGIN_REQUESTED\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n\n  LOGOUT: \"LOGOUT\",\n\n  RESET_PASSWORD_REQUESTED: \"RESET_PASSWORD_REQUESTED\",\n  RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\",\n  RESET_PASSWORD_FAILURE: \"RESET_PASSWORD_FAILURE\",\n\n  SET_PASSWORD_REQUESTED: \"SET_PASSWORD_REQUESTED\",\n  SET_PASSWORD_SUCCESS: \"SET_PASSWORD_SUCCESS\",\n  SET_PASSWORD_FAILURE: \"SET_PASSWORD_FAILURE\",\n\n  CHANGE_PASSWORD_REQUESTED: \"CHANGE_PASSWORD_REQUESTED\",\n  CHANGE_PASSWORD_SUCCESS: \"CHANGE_PASSWORD_SUCCESS\",\n  CHANGE_PASSWORD_FAILURE: \"CHANGE_PASSWORD_FAILURE\",\n\n};\n\nexport default authConstants;","import { createBrowserHistory } from \"history\";\nimport { loginApi } from \"../../../api/authApi/loginApi\";\nimport authConstants from \"../../../constants/authConstants\";\n\nconst history = createBrowserHistory();\n\nexport const loginActions = {\n  loginRequested,\n  login,\n  logout,\n};\n\nfunction loginRequested() {\n  return {\n    type: authConstants.LOGIN_REQUESTED,\n  };\n}\n\nfunction login(email, password) {\n  console.log(\"action\", email, password);\n  return (dispatch) => {\n    loginApi\n      .login(email, password)\n      .then((response) => {\n        console.log(\"yesss\", response);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        dispatch({\n          type: authConstants.LOGIN_SUCCESS,\n          payload: response.data,\n        });\n        // history.push(\"/onboarding\");\n      })\n      .catch((error) => {\n        console.log(\"noooo\", error);\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: error.toString(),\n        });\n      });\n  };\n}\n\nfunction logout() {\n  return (dispatch) => {\n    loginApi.logout().then((response) => {\n      localStorage.removeItem(\"user\", JSON.stringify(response.data));\n      dispatch({\n        type: authConstants.LOGOUT,\n      });\n    });\n  };\n}\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Container,\r\n  Image,\r\n  Navbar,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { loginActions } from \"../../../redux/actions/authActions/loginActions\";\r\nimport mask from \"../Mask Group.png\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n\r\n  // state variables\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [validated, setValidated] = useState(false);\r\n\r\n  //selectors (used inside reducers)\r\n  const isSubmitted = useSelector((state) => state.login.isSubmitted);\r\n  const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\r\n  const isInvailed = useSelector((state) => state.login.isInvailed);\r\n\r\n  //dispatch (used to define login functions)\r\n  const dispatch = useDispatch();\r\n  const loginRequested = () => dispatch(loginActions.loginRequested());\r\n  const login = () => dispatch(loginActions.login(email, password));\r\n\r\n  const handleEmailInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setEmail(value);\r\n    }\r\n  };\r\n\r\n  const handlePasswordInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    loginRequested();\r\n\r\n    if (email && password) {\r\n      login(email, password);\r\n    }\r\n    // setValidated(true);\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    history.push(\"/onboarding\");\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        {/* Column for background image*/}\r\n        <Col>\r\n          <div className=\"sign-up-image\">\r\n            <Card>\r\n              <Image src={mask} />\r\n              <Card.ImgOverlay>\r\n                <Card.Text>Tapestry Pooling</Card.Text>\r\n                <Card.Title>\r\n                  Towards faster <br /> testing\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\r\n                  scheme to test many samples using only a few tests.\r\n                </Card.Subtitle>\r\n              </Card.ImgOverlay>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n\r\n        {/* Column for the Sign-up Box */}\r\n        <Col>\r\n          <Navbar>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li>\r\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Visit Website\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Navbar>\r\n\r\n          <div className=\"login\">\r\n            <Card border=\"light\">\r\n              <Card.Title>WELCOME</Card.Title>\r\n              <Card.Subtitle>\r\n                Login using your registered Email and password.\r\n              </Card.Subtitle>{\" \"}\r\n              <br />\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* noValidate validated={validated}  */}\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      size=\"lg\"\r\n                      value={email}\r\n                      onChange={handleEmailInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Email is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formBasicPassword\" role=\"form\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      size=\"lg\"\r\n                      value={password}\r\n                      onChange={handlePasswordInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Password is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  {isSubmitted && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                  Login\r\n                </Button>\r\n                {isInvailed && <Card.Text>Login Failure</Card.Text>}\r\n              </Form>\r\n              <Card.Text>\r\n                <a href=\"/reset-password\">Forgot Password?</a>\r\n              </Card.Text>\r\n              <Card.Text className=\"new-user\">\r\n                New user? <a href=\"/sign-up\">Contact us</a> to register.\r\n              </Card.Text>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\nimport url from \"../../constants/url\";\n\nexport const signUpApi = {\n  signUp,\n};\n\nfunction signUp(email, firstName, lastName, labName, labLocation) {\n  return axios\n    .post(url.BASE_API_URL + `auth/register/`, {\n      email: email,\n      first_name: firstName,\n      last_name: lastName,\n      lab: labName,\n      city: labLocation,\n    })\n    .then((response) => {\n      return response;\n    });\n}\n","import { signUpApi } from \"../../../api/authApi/signUpApi\";\nimport authConstants from \"../../../constants/authConstants\";\n\nexport const signUpActions = {\n  signUpRequested,\n  signUp,\n};\n\nfunction signUpRequested() {\n  return {\n    type: authConstants.SIGN_UP_REQUESTED,\n  };\n}\n\nfunction signUp(email, firstName, lastName, labName, labLocation) {\n  return (dispatch) => {\n    signUpApi\n      .signUp(email, firstName, lastName, labName, labLocation)\n      .then((response) => {\n        localStorage.setItem(\"register\", JSON.stringify(response.data));\n        dispatch({\n          type: authConstants.SIGN_UP_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: authConstants.SIGN_UP_FAILURE,\n          payload: error.toString(),\n        });\n      });\n  };\n}\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Container,\r\n  Image,\r\n  Spinner,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { signUpActions } from \"../../../redux/actions/authActions/signUpActions\";\r\nimport mask from \"../Mask Group.png\";\r\nimport \"./signUp.scss\";\r\n\r\nconst SignUp = () => {\r\n  let history = useHistory();\r\n\r\n  // state variables\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [labName, setLabName] = useState(\"\");\r\n  const [labLocation, setLabLocation] = useState(\"\");\r\n  // const [validated, setValidated] = useState(false);\r\n\r\n  // selectors (used inside reducers)\r\n  const isSubmitted = useSelector((state) => state.signUp.isSubmitted);\r\n  const isRegisterd = useSelector((state) => state.signUp.isRegistered);\r\n  const isInvalid = useSelector((state) => state.signUp.isInvalid);\r\n\r\n  // dispatch (used to define sign-up function)\r\n  const dispatch = useDispatch();\r\n  const signUpRequested = () => dispatch(signUpActions.signUpRequested());\r\n  const signUp = () =>\r\n    dispatch(\r\n      signUpActions.signUp(email, firstName, lastName, labName, labLocation)\r\n    );\r\n\r\n  const handleEmailInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setEmail(value);\r\n    }\r\n  };\r\n\r\n  const handleFirstNameInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setFirstName(value);\r\n    }\r\n  };\r\n\r\n  const handleLastNameInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setLastName(value);\r\n    }\r\n  };\r\n\r\n  const handleLabNameInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setLabName(value);\r\n    }\r\n  };\r\n\r\n  const handleLabLocationInput = (e) => {\r\n    const { value } = e.target;\r\n    if (value.length >= 0) {\r\n      setLabLocation(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // const form = e.currentTarget;\r\n    // if (form.checkValidity() === false) {}\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    signUpRequested();\r\n\r\n    if (email && firstName && lastName && labName && labLocation) {\r\n      signUp(email, firstName, lastName, labName, labLocation);\r\n    }\r\n    // setValidated(true);\r\n  };\r\n\r\n  if (isRegisterd) {\r\n    history.push(\"/request-sent\");\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        {/* Column for background image*/}\r\n        <Col>\r\n          <div className=\"sign-up-image\">\r\n            <Card>\r\n              <Image src={mask} />\r\n              <Card.ImgOverlay>\r\n                <Card.Text>Tapestry Pooling</Card.Text>\r\n                <Card.Title>\r\n                  Towards faster <br /> testing\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\r\n                  scheme to test many samples using only a few tests.\r\n                </Card.Subtitle>\r\n              </Card.ImgOverlay>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n\r\n        {/* Column for the Sign-up Box */}\r\n        <Col>\r\n          <Navbar>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li>\r\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Visit Website\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Navbar>\r\n          <div className=\"sign-up\">\r\n            <Card border=\"light\">\r\n              <Card.Title>SIGN UP!</Card.Title>\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* noValidate validated={validated} */}\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      size=\"lg\"\r\n                      value={email}\r\n                      onChange={handleEmailInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Email is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalText\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      size=\"lg\"\r\n                      value={firstName}\r\n                      onChange={handleFirstNameInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    First Name is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalText\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                      size=\"lg\"\r\n                      value={lastName}\r\n                      onChange={handleLastNameInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Last Name is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalText\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Lab Name\"\r\n                      size=\"lg\"\r\n                      value={labName}\r\n                      onChange={handleLabNameInput}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Lab Name is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalText\">\r\n                  <Col sm={8}>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      as=\"select\"\r\n                      size=\"lg\"\r\n                      value={labLocation.value}\r\n                      onChange={handleLabLocationInput}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Lab Location (Select City)</option>\r\n                      <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                      <option value=\"Andaman and Nicobar Islands\">\r\n                        Andaman and Nicobar Islands\r\n                      </option>\r\n                      <option value=\"Arunachal Pradesh\">\r\n                        Arunachal Pradesh\r\n                      </option>\r\n                      <option value=\"Assam\">Assam</option>\r\n                      <option value=\"Bihar\">Bihar</option>\r\n                      <option value=\"Chandigarh\">Chandigarh</option>\r\n                      <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n                      <option value=\"Dadar and Nagar Haveli\">\r\n                        Dadar and Nagar Haveli\r\n                      </option>\r\n                      <option value=\"Daman and Diu\">Daman and Diu</option>\r\n                      <option value=\"Delhi\">Delhi</option>\r\n                      <option value=\"Lakshadweep\">Lakshadweep</option>\r\n                      <option value=\"Puducherry\">Puducherry</option>\r\n                      <option value=\"Goa\">Goa</option>\r\n                      <option value=\"Gujarat\">Gujarat</option>\r\n                      <option value=\"Haryana\">Haryana</option>\r\n                      <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                      <option value=\"Jammu and Kashmir\">\r\n                        Jammu and Kashmir\r\n                      </option>\r\n                      <option value=\"Jharkhand\">Jharkhand</option>\r\n                      <option value=\"Karnataka\">Karnataka</option>\r\n                      <option value=\"Kerala\">Kerala</option>\r\n                      <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                      <option value=\"Maharashtra\">Maharashtra</option>\r\n                      <option value=\"Manipur\">Manipur</option>\r\n                      <option value=\"Meghalaya\">Meghalaya</option>\r\n                      <option value=\"Mizoram\">Mizoram</option>\r\n                      <option value=\"Nagaland\">Nagaland</option>\r\n                      <option value=\"Odisha\">Odisha</option>\r\n                      <option value=\"Punjab\">Punjab</option>\r\n                      <option value=\"Rajasthan\">Rajasthan</option>\r\n                      <option value=\"Sikkim\">Sikkim</option>\r\n                      <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n                      <option value=\"Telangana\">Telangana</option>\r\n                      <option value=\"Tripura\">Tripura</option>\r\n                      <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                      <option value=\"Uttarakhand\">Uttarakhand</option>\r\n                      <option value=\"West Bengal\">West Bengal</option>\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Location is required.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  {isSubmitted && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                  Request Sign up\r\n                </Button>\r\n                {isInvalid && (\r\n                  <Card.Text>\r\n                    Sign up failed due to some reason. Please try again!\r\n                  </Card.Text>\r\n                )}\r\n              </Form>\r\n\r\n              <Card.Text>\r\n                Already a user? <a href=\"/login\">Sign in</a> here\r\n              </Card.Text>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Col, Row, Card, Container, Image, Navbar } from \"react-bootstrap\";\r\nimport mask from \"../Mask Group.png\";\r\nimport \"./requestSent.scss\";\r\n\r\nconst RequestSent = () => {\r\n  const email = localStorage.getItem(\"user-details\");\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        {/* Column for background image*/}\r\n        <Col>\r\n          <div className=\"sign-up-image\">\r\n            <Card>\r\n              <Image src={mask} />\r\n              <Card.ImgOverlay>\r\n                <Card.Text>Tapestry Pooling</Card.Text>\r\n                <Card.Title>\r\n                  Towards faster <br /> testing\r\n                </Card.Title>\r\n                <Card.Subtitle>\r\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\r\n                  scheme to test many samples using only a few tests.\r\n                </Card.Subtitle>\r\n              </Card.ImgOverlay>\r\n            </Card>\r\n          </div>Anirudha\r\n        </Col>\r\n\r\n        {/* Column for the Request-Sent Box */}\r\n        <Col>\r\n          <Navbar>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li>\r\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Visit Website\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Navbar>\r\n          <div className=\"requestSent\">\r\n            <Card border=\"light\">\r\n              <Card.Title>REQUEST SENT!</Card.Title>\r\n\r\n              <Card.Text>\r\n                We have received your request, our team will get back to you\r\n                shortly on your email.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                <a href=\"#\">Visit out website</a> to know more about our\r\n                product.\r\n              </Card.Text>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RequestSent;\r\n","import axios from \"axios\";\nimport url from \"../../constants/url\";\n\nexport const passwordApi = {\n  resetPassword,\n  setPassword,\n  changePassword,\n};\n\nfunction resetPassword(email) {\n  return axios\n    .post(url.BASE_API_URL + `auth/password/reset/`, {\n      email: email,\n    })\n    .then((response) => {\n      return response;\n    });\n}\n\nfunction setPassword(password1, password2, uid, token) {\n  return axios\n    .post(url.BASE_API_URL + `auth/password/reset/confirm/`, {\n      new_password1: password1,\n      new_password2: password2,\n      uid: uid,\n      token: token,\n    })\n    .then((response) => {\n      return response;\n    });\n}\n\nfunction changePassword(oldPassword, password1, password2) {\n  return axios\n    .post(url.BASE_API_URL + `auth/password/change/`, {\n      old_password: oldPassword,\n      new_password1: password1,\n      new_password2: password2,\n    })\n    .then((response) => {\n      return response;\n    });\n}\n","import { createBrowserHistory } from \"history\";\nimport { passwordApi } from \"../../../api/authApi/passwordApi\";\nimport authConstants from \"../../../constants/authConstants\";\n\nconst history = createBrowserHistory();\n\nexport const passwordActions = {\n  resetPasswordRequested,\n  setPasswordRequested,\n  changePasswordRequested,\n  resetPassword,\n  setPassword,\n  changePassword,\n};\n\nfunction resetPasswordRequested() {\n  return {\n    type: authConstants.RESET_PASSWORD_REQUESTED,\n  };\n}\n\nfunction setPasswordRequested() {\n  return {\n    type: authConstants.SET_PASSWORD_REQUESTED,\n  };\n}\n\nfunction changePasswordRequested() {\n  return {\n    type: authConstants.CHANGE_PASSWORD_REQUESTED,\n  };\n}\n\nfunction resetPassword(email) {\n  return (dispatch) => {\n    passwordApi\n      .resetPassword(email)\n      .then((response) => {\n        dispatch({\n          type: authConstants.RESET_PASSWORD_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: authConstants.RESET_PASSWORD_FAILURE,\n          payload: error,\n        });\n      });\n  };\n}\n\nfunction setPassword(password1, password2, uid, token) {\n  return (dispatch) => {\n    passwordApi\n      .setPassword(password1, password2, uid, token)\n      .then((response) => {\n        dispatch({\n          type: authConstants.SET_PASSWORD_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: authConstants.SET_PASSWORD_FAILURE,\n          payload: error,\n        });\n      });\n  };\n}\n\nfunction changePassword(oldPassword, password1, password2) {\n  return (dispatch) => {\n    passwordApi\n      .setPassword(oldPassword, password1, password2)\n      .then((response) => {\n        dispatch({\n          type: authConstants.CHANGE_PASSWORD_SUCCESS,\n          payload: response.data,\n        });\n        history.push(\"/landing\");\n      })\n      .catch((error) => {\n        dispatch({\n          type: authConstants.CHANGE_PASSWORD_FAILURE,\n          payload: error,\n        });\n      });\n  };\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Card,\n  Container,\n  Image,\n  Navbar,\n  Spinner,\n} from \"react-bootstrap\";\nimport { passwordActions } from \"../../../../redux/actions/authActions/passwordActions\";\nimport mask from \"../../Mask Group.png\";\nimport \"./resetPassword.scss\";\n\nconst ResetPassword = () => {\n  const history = useHistory();\n\n  // state variables\n  const [email, setEmail] = useState(\"\");\n  // const [validated, setValidated] = useState(false);\n\n  // selectors (used in password reducer)\n  const isSubmitted = useSelector((state) => state.password.isSubmitted);\n  const isResetPasswordSuccess = useSelector(\n    (state) => state.password.isResetPasswordSuccess\n  );\n  const isInvalid = useSelector(\n    (state) => state.password.isResetPasswordFailure\n  );\n\n  // dispatch (used in defining reset password function)\n  const dispatch = useDispatch();\n  const resetPasswordRequested = () =>\n    dispatch(passwordActions.resetPasswordRequested());\n  const resetPassword = () => dispatch(passwordActions.resetPassword(email));\n\n  const handleEmailInput = (e) => {\n    const { value } = e.target;\n    if (value.length >= 0) {\n      setEmail(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    // const form = e.currentTarget;\n    // if (form.checkValidity() === false) {}\n    e.preventDefault();\n    e.stopPropagation();\n\n    resetPasswordRequested();\n\n    if (email) {\n      resetPassword(email);\n    }\n    // setValidated(true);\n  };\n\n  if (isResetPasswordSuccess) {\n    history.push(\"/password-link-sent\");\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* Column for background image*/}\n        <Col>\n          <div className=\"sign-up-image\">\n            <Card>\n              <Image src={mask} />\n              <Card.ImgOverlay>\n                <Card.Text>Tapestry Pooling</Card.Text>\n                <Card.Title>\n                  Towards faster <br /> testing\n                </Card.Title>\n                <Card.Subtitle>\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\n                  scheme to test many samples using only a few tests.\n                </Card.Subtitle>\n              </Card.ImgOverlay>\n            </Card>\n          </div>\n        </Col>\n\n        {/* Column for the Sign-up Box */}\n        <Col>\n          <Navbar>\n            <ul className=\"navbar-nav ml-auto\">\n              <li>\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Contact us\n                </a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Visit Website\n                </a>\n              </li>\n            </ul>\n          </Navbar>\n\n          <div className=\"resetPassword\">\n            <Card border=\"light\">\n              <Card.Title>RESET PASSWORD</Card.Title>\n              <Card.Subtitle>\n                Enter your registered mail ID to reset password\n              </Card.Subtitle>{\" \"}\n              <br />\n              <Form onSubmit={handleSubmit}>\n                {/* noValidate validated={validated}  */}\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      size=\"lg\"\n                      value={email}\n                      onChange={handleEmailInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\n                  {isSubmitted && (\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                  Reset Password\n                </Button>\n                {isInvalid && (\n                  <Card.Text>\n                    Reset Password failed. Please try again!\n                  </Card.Text>\n                )}\n              </Form>\n              <Card.Text>Back to Login?</Card.Text>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport { Col, Row, Card, Container, Image, Navbar } from \"react-bootstrap\";\nimport mask from \"../../Mask Group.png\";\nimport \"./passwordLinkSent.scss\";\n\nclass PasswordLinkSent extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {/* Column for background image*/}\n          <Col>\n            <div className=\"sign-up-image\">\n              <Card>\n                <Image src={mask} />\n                <Card.ImgOverlay>\n                  <Card.Text>Tapestry Pooling</Card.Text>\n                  <Card.Title>\n                    Towards faster <br /> testing\n                  </Card.Title>\n                  <Card.Subtitle>\n                    Tapestry, a novel quantitative nonadaptive pooling <br />\n                    scheme to test many samples using only a few tests.\n                  </Card.Subtitle>\n                </Card.ImgOverlay>\n              </Card>\n            </div>\n          </Col>\n\n          {/* Column for the Request-Sent Box */}\n          <Col>\n            <Navbar>\n              <ul className=\"navbar-nav ml-auto\">\n                <li>\n                  <a className=\"nav-link\"> Develop using our Algorithm</a>\n                </li>\n                <li>\n                  <a className=\"nav-link\" href=\"#\">\n                    Contact us\n                  </a>\n                </li>\n                <li>\n                  <a className=\"nav-link\" href=\"#\">\n                    Visit Website\n                  </a>\n                </li>\n              </ul>\n            </Navbar>\n            <div className=\"passwordLinkSent\">\n              <Card border=\"light\">\n                <Card.Title>Password Reset Link Sent!</Card.Title>\n\n                <Card.Subtitle>\n                  We have sent a password reset link to your email. Follow the\n                  link to reset password.\n                </Card.Subtitle>\n                <Card.Text>\n                  <a href=\"#\">Visit out website</a> to know more about our\n                  product.\n                </Card.Text>\n                <Card.Text>Back to Login</Card.Text>\n                <Card.Text className=\"new-user\">\n                  New user? <a href=\"/sign-up\">Contact us</a> to register.\n                </Card.Text>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PasswordLinkSent;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Card,\n  Container,\n  Image,\n  Navbar,\n  Spinner,\n} from \"react-bootstrap\";\nimport { passwordActions } from \"../../../redux/actions/authActions/passwordActions\";\nimport mask from \"../Mask Group.png\";\nimport \"./setPassword.scss\";\n\nconst SetPassword = () => {\n  let history = useHistory();\n  let match = useRouteMatch();\n\n  // state variables\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [validated, setValidated] = useState(false);\n\n  const uid = match.params.uid;\n  const token = match.params.token;\n\n  // selectors (used in password reducer)\n  const isInvalid = useSelector((state) => state.password.isInvalid);\n  const isSetPasswordSuccess = useSelector(\n    (state) => state.password.isSetPasswordSuccess\n  );\n  const isSubmitted = useSelector((state) => state.password.isSubmitted);\n\n  // dispatch (used for defining set password function)\n  const dispatch = useDispatch();\n  const setPasswordRequested = () =>\n    dispatch(passwordActions.setPasswordRequested());\n  const setPassword = () =>\n    dispatch(\n      passwordActions.setPassword(newPassword, confirmPassword, uid, token)\n    );\n\n  const handleNewPasswordInput = (e) => {\n    const { value } = e.target;\n\n    if (value.length >= 0) {\n      setNewPassword(value);\n    }\n  };\n\n  const handleConfirmPasswordInput = (e) => {\n    const { value } = e.target;\n\n    if (value.length >= 0) {\n      setConfirmPassword(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    // const form = e.currentTarget;\n    // if (form.checkValidity() === false) {}\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    setPasswordRequested();\n    if (newPassword && confirmPassword && newPassword === confirmPassword) {\n      setPassword(newPassword, confirmPassword, uid, token);\n    }\n    // setValidated(true);\n  };\n\n  if (isSetPasswordSuccess) {\n    history.push(\"/onboarding\");\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* Column for background image*/}\n        <Col>\n          <div className=\"sign-up-image\">\n            <Card>\n              <Image src={mask} />\n              <Card.ImgOverlay>\n                <Card.Text>Tapestry Pooling</Card.Text>\n                <Card.Title>\n                  Towards faster <br /> testing\n                </Card.Title>\n                <Card.Subtitle>\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\n                  scheme to test many samples using only a few tests.\n                </Card.Subtitle>\n              </Card.ImgOverlay>\n            </Card>\n          </div>\n        </Col>\n\n        {/* Column for the Sign-up Box */}\n        <Col>\n          <Navbar>\n            <ul className=\"navbar-nav ml-auto\">\n              <li>\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Contact us\n                </a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Visit Website\n                </a>\n              </li>\n            </ul>\n          </Navbar>\n\n          <div className=\"login\">\n            <Card border=\"light\">\n              <Card.Title>Set Password</Card.Title>\n              <Card.Subtitle>Create a new Password.</Card.Subtitle> <br />\n              <Form onSubmit={handleSubmit}>\n                {/* noValidate validated={validated} */}\n                <Form.Group as={Row} controlId=\"formBasicPassword\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"New Password\"\n                      size=\"lg\"\n                      value={newPassword}\n                      onChange={handleNewPasswordInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formBasicPassword\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      size=\"lg\"\n                      value={confirmPassword}\n                      onChange={handleConfirmPasswordInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\n                  {isSubmitted && (\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                  Create Password\n                </Button>\n                {newPassword !== confirmPassword && (\n                  <Card.Text>Passwords dont match. Please try again!</Card.Text>\n                )}\n                {isInvalid && (\n                  <Card.Text>Request failed. Please try again!</Card.Text>\n                )}\n              </Form>\n              <Card.Text>Back to Login?</Card.Text>\n              <Card.Text className=\"new-user\">\n                New user? <a href=\"/sign-up\">Contact us</a> to register.\n              </Card.Text>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SetPassword;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Card,\n  Container,\n  Image,\n  Navbar,\n  Spinner\n} from \"react-bootstrap\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { passwordActions } from \"../../../../redux/actions/authActions/passwordActions\";\nimport \"./changePassword.scss\";\nimport mask from \"../../Mask Group.png\";\n\nconst ChangePassword = () => {\n  let history = useHistory();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  const isSubmitted = useSelector((state) => state.password.isSubmitted);\n  const isChangePasswordSuccess = useSelector(\n    (state) => state.password.isChangePasswordSuccess\n  );\n  const isChangePasswordFailure = useSelector(\n    (state) => state.password.isChangePasswordFailure\n  );\n\n  const dispatch = useDispatch();\n  const changePasswordRequested = () =>\n    dispatch(passwordActions.changePasswordRequested());\n  const changePassword = () =>\n    dispatch(\n      passwordActions.changePassword(oldPassword, newPassword, confirmPassword)\n    );\n\n  const handleNewPasswordInput = (e) => {\n    const { value } = e.target;\n\n    if (value.length > 0) {\n      setNewPassword(value);\n    }\n  };\n\n  const handleConfirmPasswordInput = (e) => {\n    const { value } = e.target;\n\n    if (value.length > 0) {\n      setConfirmPassword(value);\n    }\n  };\n\n  const handleOldPasswordInput = (e) => {\n    const { value } = e.target;\n\n    if (value.length > 0) {\n      setOldPassword(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    const form = e.currentTarget;\n    // if (form.checkValidity() === false) {\n    e.preventDefault();\n    e.stopPropagation();\n    // }\n\n    changePasswordRequested();\n    if (\n      oldPassword &&\n      newPassword &&\n      confirmPassword &&\n      newPassword === confirmPassword\n    ) {\n      changePassword(oldPassword, newPassword, confirmPassword);\n    }\n\n    setValidated(true);\n  };\n\n  if (isChangePasswordSuccess) {\n    history.push(\"/onboarding\");\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* Column for background image*/}\n        <Col>\n          <div className=\"sign-up-image\">\n            <Card>\n              <Image src={mask} />\n              <Card.ImgOverlay>\n                <Card.Text>Tapestry Pooling</Card.Text>\n                <Card.Title>\n                  Towards faster <br /> testing\n                </Card.Title>\n                <Card.Subtitle>\n                  Tapestry, a novel quantitative nonadaptive pooling <br />\n                  scheme to test many samples using only a few tests.\n                </Card.Subtitle>\n              </Card.ImgOverlay>\n            </Card>\n          </div>\n        </Col>\n\n        {/* Column for the Sign-up Box */}\n        <Col>\n          <Navbar>\n            <ul className=\"navbar-nav ml-auto\">\n              <li>\n                <a className=\"nav-link\"> Develop using our Algorithm</a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Contact us\n                </a>\n              </li>\n              <li>\n                <a className=\"nav-link\" href=\"#\">\n                  Visit Website\n                </a>\n              </li>\n            </ul>\n          </Navbar>\n\n          <div className=\"login\">\n            <Card border=\"light\">\n              <Card.Title>Change Password</Card.Title>\n              <Card.Subtitle>\n                Change your password here and new one.\n              </Card.Subtitle>{\" \"}\n              <br />\n              <Form onSubmit={handleSubmit}>\n                {/* noValidate validated={validated} */}\n                <Form.Group as={Row} controlId=\"formBasicPassword\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"Old Password\"\n                      size=\"lg\"\n                      value={oldPassword}\n                      onChange={handleOldPasswordInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formBasicPassword\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"New Password\"\n                      size=\"lg\"\n                      value={newPassword}\n                      onChange={handleNewPasswordInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formBasicPassword\">\n                  <Col sm={8}>\n                    <Form.Control\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      size=\"lg\"\n                      value={confirmPassword}\n                      onChange={handleConfirmPasswordInput}\n                      required\n                    />\n                  </Col>\n                </Form.Group>\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\n                  {isSubmitted && (\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                  Change Password\n                </Button>\n                {newPassword !== confirmPassword && (\n                  <Card.Text>Passwords dont match. Please try again!</Card.Text>\n                )}\n                {isChangePasswordFailure && (\n                  <Card.Text>Request failed. Please try again!</Card.Text>\n                )}\n              </Form>\n              <Card.Text>Back to Login?</Card.Text>\n              <Card.Text className=\"new-user\">\n                New user? <a href=\"/sign-up\">Contact us</a> to register.\n              </Card.Text>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChangePassword;\n","import React, { Component } from \"react\";\nimport { Col, Row, Card, Container, Image, Navbar } from \"react-bootstrap\";\nimport mask from \"../../Mask Group.png\";\nimport \"./congratulations.scss\";\n\nclass Congratulations extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {/* Column for background image*/}\n          <Col>\n            <div className=\"sign-up-image\">\n              <Card>\n                <Image src={mask} />\n                <Card.ImgOverlay>\n                  <Card.Text>Tapestry Pooling</Card.Text>\n                  <Card.Title>\n                    Towards faster <br /> testing\n                  </Card.Title>\n                  <Card.Subtitle>\n                    Tapestry, a novel quantitative nonadaptive pooling <br />\n                    scheme to test many samples using only a few tests.\n                  </Card.Subtitle>\n                </Card.ImgOverlay>\n              </Card>\n            </div>\n          </Col>\n\n          {/* Column for the Sign-up Box */}\n          <Col>\n            <Navbar>\n              <ul className=\"navbar-nav ml-auto\">\n                <li>\n                  <a className=\"nav-link\"> Develop using our Algorithm</a>\n                </li>\n                <li>\n                  <a className=\"nav-link\" href=\"#\">\n                    Contact us\n                  </a>\n                </li>\n                <li>\n                  <a className=\"nav-link\" href=\"#\">\n                    Visit Website\n                  </a>\n                </li>\n              </ul>\n            </Navbar>\n\n            <div className=\"congratulations\">\n              <Card border=\"light\">\n                <Card.Title>Congratulations!</Card.Title>\n                <Card.Subtitle>\n                  We have created a new password for you. Please login using\n                  your new password.\n                </Card.Subtitle>\n\n                <Card.Text>\n                  <a href=\"/login\">Login</a> to your profile.\n                </Card.Text>\n                <Card.Text className=\"new-user\">\n                  New user? <a href=\"/sign-up\">Contact us</a> to register.\n                </Card.Text>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Congratulations;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  OverlayTrigger,\n  Image,\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Button,\n  ListGroupItem,\n} from \"react-bootstrap\";\nimport machine1 from \"./machine1.png\";\nimport machine2 from \"./machine2.png\";\nimport machine3 from \"./machine3.png\";\nimport machine4 from \"./machine4.png\";\nimport \"./onboarding.scss\";\n\nclass Onboarding extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"onboarding\">\n          <Card border=\"light\">\n            <Card.Body>\n              <Card.Title>Welcome user!</Card.Title>\n              <Card.Subtitle>\n                Vevanta Memorial Hospitals, Biogen Labs\n              </Card.Subtitle>\n            </Card.Body>\n          </Card>\n        </div>\n\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"test-kit\">Test Kit Type</div>\n            </Col>\n          </Row>\n\n          <Row md={4}>\n            <Col>\n              <OverlayTrigger\n                trigger=\"hover\"\n                overlay={\n                  <ListGroup variant=\"flush\">\n                    <ListGroupItem>E gene</ListGroupItem>\n                    <ListGroupItem>RdRP gene</ListGroupItem>\n                  </ListGroup>\n                }\n                placement=\"bottom-end\"\n              >\n                <span>\n                  <Button variant=\"\">\n                    <div className=\"button-main-heading\">\n                      PathoDetect COVID-19 qPCR\n                    </div>\n                    <div className=\"button-sub-heading\"> MyLab Discovery</div>\n                  </Button>\n                </span>\n              </OverlayTrigger>\n            </Col>\n            <Col>\n              <OverlayTrigger\n                trigger=\"hover\"\n                overlay={\n                  <ListGroup variant=\"flush\">\n                    <ListGroupItem>E gene</ListGroupItem>\n                    <ListGroupItem>RdRP gene</ListGroupItem>\n                  </ListGroup>\n                }\n                placement=\"bottom-end\"\n              >\n                <span>\n                  <Button variant=\"\">\n                    <div className=\"button-main-heading\">\n                      AbGun COVID-19 RT-PCR\n                    </div>\n\n                    <div className=\"button-sub-heading\">Lab Genomics</div>\n                  </Button>\n                </span>\n              </OverlayTrigger>\n            </Col>\n            <Col>\n              <OverlayTrigger\n                trigger=\"hover\"\n                overlay={\n                  <ListGroup variant=\"flush\">\n                    <ListGroupItem>E gene</ListGroupItem>\n                    <ListGroupItem>RdRP gene</ListGroupItem>\n                    <ListGroupItem>ORF gene</ListGroupItem>\n                  </ListGroup>\n                }\n                placement=\"bottom-end\"\n              >\n                <span>\n                  <Button variant=\"\">\n                    <div className=\"button-main-heading\">\n                      Invitrogen SuperScrip III qPCR\n                    </div>\n                    <div className=\"button-sub-heading\">\n                      ThermoFisher Scientific\n                    </div>\n                  </Button>\n                </span>\n              </OverlayTrigger>\n            </Col>\n            <Col>\n              <OverlayTrigger\n                trigger=\"hover\"\n                overlay={\n                  <ListGroup variant=\"flush\">\n                    <ListGroupItem>E gene</ListGroupItem>\n                    <ListGroupItem>RdRP gene</ListGroupItem>\n                  </ListGroup>\n                }\n                placement=\"bottom-end\"\n              >\n                <span>\n                  <Button variant=\"\">\n                    <div className=\"button-main-heading\">\n                      Quantiplus Multiplex RT-qPCR\n                    </div>\n                    <div className=\"button-sub-heading\">HUWEL Life Science</div>\n                  </Button>\n                </span>\n              </OverlayTrigger>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"test-kit\">Machine Type</div>\n            </Col>\n          </Row>\n\n          <Row md={4}>\n            <Col>\n              <Button variant=\"\">\n                <Container>\n                  <Row>\n                    <Col>\n                      <Image src={machine1} rounded thumbnail />\n                    </Col>\n                    <Col>QuantStudio™ 12K Flex Real-Time PCR</Col>\n                  </Row>\n                </Container>\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"\">\n                <Container>\n                  <Row>\n                    <Col>\n                      <Image src={machine2} rounded thumbnail />\n                    </Col>\n                    <Col>BioRad qPCR</Col>\n                  </Row>\n                </Container>\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"\">\n                <Container>\n                  <Row>\n                    <Col>\n                      <Image src={machine3} rounded thumbnail />\n                    </Col>\n                    <Col> Eco Real-Time PCR</Col>\n                  </Row>\n                </Container>\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"\">\n                <Container>\n                  <Row>\n                    <Col>\n                      <Image src={machine4} rounded thumbnail />\n                    </Col>\n                    <Col> PCR System MSLPCR20</Col>\n                  </Row>\n                </Container>\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Onboarding;\n","import React from 'react';\nimport { Nav, Navbar, NavDropdown, Container} from 'react-bootstrap';\n\nimport \"./NavBarLanding.scss\";\nimport \"../../index.scss\";\n\nfunction NavBarLanding(props) {\n    return (\n        <Navbar>\n            <Container fluid>\n            <Navbar.Brand href=\"#home\">TAPESTRY POOLING</Navbar.Brand>\n            <Nav className='m-auto nav align-content-md-end' activeKey={props.activepage}>\n                <Nav.Item>\n                    <Nav.Link href=\"/ongoingtests\">Ongoing Tests</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"/completedTests\">\n                        Completed Tests{/*'\\u00A0'\n                        <sup><Badge pill variant='light' className='bdg-prim'>{props.count ? props.count : ''}</Badge></sup>*/}\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <NavDropdown title={props.userId} id=\"user-nav-dropdown\" alignRight>\n                {/* Dropdown links to be added */}\n                <NavDropdown.Item >\n                    <h6>{props.userId}</h6>\n                    <p className='text-muted'>{props.labName}</p>\n                </NavDropdown.Item>\n                <hr className='firstline'/>\n                <NavDropdown.Item href=\"#\">\n                    Default Settings\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#\">\n                    + Add new lab member\n                </NavDropdown.Item>\n                <hr className='secondline'/>\n                <NavDropdown.Item href=\"#\" disabled>\n                    Product Tour\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#\" disabled>\n                    Help and Support\n                </NavDropdown.Item>\n                <hr className='secondline' />\n                <NavDropdown.Item href=\"/login\">\n                    Logout\n                </NavDropdown.Item>\n            </NavDropdown>   \n            </Container>         \n        </Navbar>\n    );\n}\n\nexport default NavBarLanding;","import React from 'react';\n\nconst getSVG = function(imageName){\n    const images= require.context('../assets', true);\n    let imgpath = images('./' + imageName + '.svg');\n    return <img src={imgpath} alt={imageName}></img>\n}\n\nexport default getSVG;","import React from 'react';\nimport {Table, Container, Row, Button, OverlayTrigger, Popover} from 'react-bootstrap';\n\nimport './tableLanding.scss'\nimport getSVG from '../../utils/getSVG'\n\nfunction TableLanding(props) {\n\n    const ongoingrows = ['download','upload','options']\n    const completedrows = ['view','options']\n    const rows = props.testStatus === 'ongoing' ? ongoingrows : completedrows\n\n    const emptyHeader = () => {\n        return rows.map(row => <th key={row}></th>)\n    }\n\n    const getKeys = () => {\n        return Object.keys(props.jsonoutput[0])\n    }\n\n    const getHeader = () => {\n        var heads = getKeys()\n        return heads.map(head => \n        {\n            switch(head){\n                case 'TEST ID': return <th key={head}>{head}</th>;\n                case 'NUMBER OF SAMPLES': return <th key={head} className='text-center'>{head}</th>\n                case 'ASSIGNED TO': return <th key={head}>{head}</th>;\n                case 'STATUS': return <th key={head} className='text-center'>{head}</th>;\n                case 'POSITIVE SAMPLES': return <th key={head} className='text-center'>{head}</th>;\n                case 'UNDETERMINED SAMPLES': return <th key={head} className='text-center'>{head}</th>\n                default: return null;\n            }            \n        })\n    };\n\n    const optionsot = () => {\n        return <Popover id=\"popover-basic\">\n            <Popover.Title className='text-muted'>DATA OPTIONS</Popover.Title>\n            <Popover.Content>\n                <Button bsPrefix='btn-text'>{getSVG('options')} Edit Pool Test</Button>\n            </Popover.Content>\n        </Popover>\n    }\n\n    const optionsct = () => {\n        return <Popover id='popover-basic'>\n            \n        </Popover>\n    }\n\n    const getBody = () => {\n        var items = props.jsonoutput;\n        var keys = getKeys();\n        keys = keys.concat(rows)\n        return items.map((row, index)=>\n        {\n            if (props.testStatus === 'ongoing') {\n                if (row['STATUS'] === 'Error in Parsing!') {\n                    return <tr key={index} style={{borderLeft: '5px solid red'}}>\n                        {keys.map(key =>\n                        {\n                            switch(key) {\n                                case 'TEST ID': return <th key={key} className='text-normal text-danger'>{row[key]}</th>;\n                                case 'NUMBER OF SAMPLES': return <th key={key} className='text-normal text-center text-danger'>{row[key]}</th>;\n                                case 'ASSIGNED TO': return <th key={key} className='text-normal text-danger'>{row[key]}</th>;\n                                case 'STATUS': return <th key={key} className='text-normal text-center text-danger'>{row[key]}</th>;\n                                case 'download': return <th key={key} className='text-normal text-center'>\n                                    <a href={row['file']} className='download-link text-dark'>Download pooling matrix</a>\n                                </th>\n                                case 'upload': return <th key={key} className='text-normal text-center'>\n                                    <a href=\"/ongoingtests#\" className='text-dark prim-color'>Reupload {getSVG('reupload')}</a>\n                                </th>\n                                case 'options': return (\n                                    <th key={key} className='text-center'>\n                                        <OverlayTrigger trigger='focus' placement='bottom' overlay={optionsot()}>\n                                            <Button bsPrefix='btn-text prim-color'>{getSVG('dots')}</Button>\n                                        </OverlayTrigger>                                            \n                                     </th>\n                                )\n                                default: return null;\n                            }    \n                        })}\n                    </tr>\n                } else {\n                    return <tr key={index}>\n                        {keys.map(key =>\n                        {\n                            switch(key) {\n                                case 'TEST ID': return <th key={key} className='text-normal'>{row[key]}</th>;\n                                case 'NUMBER OF SAMPLES': return <th key={key} className='text-normal text-center'>{row[key]}</th>;\n                                case 'ASSIGNED TO': return <th key={key} className='text-normal'>{row[key]}</th>;\n                                case 'STATUS': return <th key={key} className='text-normal text-muted text-center'>{row[key]}</th>;\n                                case 'download': return <th key={key} className='text-normal text-center'>\n                                    <a href={row['file']} className='download-link text-dark'>Download pooling matrix</a>\n                                </th>\n                                case 'upload': return <th key={key} className='text-normal text-center'>\n                                    <a href=\"/ongoingtests#\" className='prim-color'>Upload qPCR results</a>\n                                </th>\n                                case 'options': return (\n                                    <th key={key} className='text-center'>\n                                        <OverlayTrigger trigger='focus' placement='bottom' overlay={optionsot()}>\n                                            <Button bsPrefix='btn-text prim-color'>{getSVG('dots')}</Button>\n                                        </OverlayTrigger>                                            \n                                     </th>\n                                )\n                                default: return null;\n                            }    \n                        })}\n                    </tr>    \n                }\n            } else {\n                return <tr key={index}>\n                {keys.map(key =>\n                {\n                    switch(key) {\n                        case 'TEST ID': return <th key={key} className='text-normal'>{row[key]}</th>;\n                        case 'NUMBER OF SAMPLES': return <th key={key} className='text-normal text-center'>{row[key]}</th>;\n                        case 'ASSIGNED TO': return <th key={key} className='text-normal'>{row[key]}</th>;\n                        case 'POSITIVE SAMPLES': return <th key={key} className='text-normal text-center'>{row[key]}</th>;\n                        case 'UNDETERMINED SAMPLES': return <th key={key} className='text-normal text-center'>{row[key]}</th>;\n                        case 'view': return <th key={key} className='text-normal text-center'>\n                            <a href=\"/completedtests#\" className='prim-color'>View results</a>\n                        </th>\n                        case 'options': return (\n                            <th key={key} className='text-center'>\n                                <OverlayTrigger trigger='focus' placement='bottom' overlay={optionsct()}>\n                                    <Button bsPrefix='btn-text prim-color'>{getSVG('dots')}</Button>\n                                </OverlayTrigger>                                            \n                             </th>\n                        )\n                        default: return null;\n                    }\n                })}\n                </tr>\n            }      \n        });\n    }\n\n    return (  \n        <Container fluid>\n            <Row>\n                <Table borderless hover responsive className='border shadow-sm bg-white'>\n                    <thead className='border-bottom bg-light'>\n                        <tr>\n                            {getHeader()}\n                            {emptyHeader()}                        \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {getBody()}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    );\n}\n \nexport default TableLanding;","import React, {useState} from 'react';\nimport { Container, Button, Form, FormControl, InputGroup, Row, Col, ButtonGroup, ToggleButton} from 'react-bootstrap';\n\nimport NavBarLanding from '../../../components/NavBar'\nimport TableLanding from '../../../components/TableLanding'\nimport './ongoingTests.scss'\nimport '../../../index.scss'\nimport getSVG from \"../../../utils/getSVG\"\n\nfunction OngoingTests(props) {\n    const testStatus = 'ongoing'\n    const userId = 'Anirudha'\n    const labName = 'Vedanta Memorial Hospitals, Biogen Labs'\n    //const count = 1\n    const onGoingTests = 25\n    const [radioValue, setRadioValue] = useState('0');\n    const radios = [\n        {name:'All', value:'0'},\n        {name:'Errors', value:'-1'},\n        {name:'In Progress', value:'1'}\n    ]\n    const jsonoutput = [\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'STATUS': 'In progress', 'file': '/ongoingtests#'},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'STATUS': 'In progress', 'file': '/ongoingtests#'},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'STATUS': 'Error in Parsing!', 'file': '/ongoingtests#'},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'STATUS': 'In progress', 'file': '/ongoingtests#'},\n    ]\n\n    return (          \n        <div className='bg-light'>\n        <NavBarLanding activepage='/ongoingtests' userId={userId} labName={labName}/>\n        <Container fluid>\n            <Row className='mt-3'>\n                <Col xs={7}>\n                    <Row>\n                        <Col xs={5} className='my-auto'>\n                            <h5>ONGOING TESTS ({onGoingTests})</h5>\n                        </Col>\n                        <Col xs={7}>\n                            <Row>\n                                <p className='my-auto'>Filters</p>\n                                    {radios.map((radio, idx) => (\n                                    <ButtonGroup toggle>\n                                        <ToggleButton\n                                            key={idx}\n                                            type=\"radio\"\n                                            name=\"status\"\n                                            value={radio.value}\n                                            className= 'ml-3 pr-4 pl-4 filter-btn bg-white'\n                                            checked={radioValue === radio.value}\n                                            onChange={(e) => setRadioValue(e.currentTarget.value)}\n                                        >\n                                            {radio.name}\n                                        </ToggleButton>\n                                    </ButtonGroup>\n                                    ))}\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xs={5}>\n                    <Row>\n                        <Col xs={{span: 5, offset: 2}} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <Form>\n                                <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>Search</Form.Label>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text>\n                                            {getSVG('search')}\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <FormControl  id=\"inlineFormInputGroupUsername2\" placeholder=\"Search TEST ID\" />\n                                </InputGroup>\n                            </Form>\n                        </Col>\n                        <Col xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <Button bsPrefix='ml-3 pl-4 pr-4 bg-tapestry btn'>+ New Test</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>    \n            <Row className='mt-3 ml-3 mr-3'>\n                <Col>\n                    <TableLanding jsonoutput={jsonoutput} testStatus={testStatus} />\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\n\nexport default OngoingTests;","import React from 'react';\nimport { Container, Row, Col, Form, InputGroup, FormControl, Button, Card, FormGroup } from 'react-bootstrap';\n/*import Select from 'react-select'*/\n\nimport NavBarLanding from '../../../components/NavBar'\nimport TableLanding from '../../../components/TableLanding'\nimport getSVG from '../../../utils/getSVG'\nimport './completedTests.scss'\nimport '../../../index.scss'\n\nfunction CompletedTests() {\n    const testStatus='completed'\n    const userId = 'Anirudha'\n    const labName = 'Vedanta Memorial Hospitals, Biogen Labs'\n    //const count = 0\n    const jsonoutput = [\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'POSITIVE SAMPLES': 4, 'UNDETERMINED SAMPLES': 2},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'POSITIVE SAMPLES': 4, 'UNDETERMINED SAMPLES': 2},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'POSITIVE SAMPLES': 4, 'UNDETERMINED SAMPLES': 2},\n        {'TEST ID': 27435, 'NUMBER OF SAMPLES': 487, 'ASSIGNED TO': 'Harmen Potter', 'POSITIVE SAMPLES': 4, 'UNDETERMINED SAMPLES': 2}\n    ]\n    const filter_options = [\n        {value:'this week', label:'This Week'},\n        {value:'this month', label:'This Month'},\n        {value:'today', label: 'Today'}\n    ]\n    const tests_comp = 73\n    const your_tests = 24\n    const samp_tested = 23854\n    const your_samp = 284\n    const pos_samp = 138\n    const und_samp = 88\n\n    return (\n        <div className='bg-light'>\n            <NavBarLanding activepage='/completedTests' userId={userId} labName={labName}/>\n            <Container fluid>    \n                <Row className='mt-3'>\n                    <Col xs={6}>\n                        <Row>\n                            <Col xs={4}>\n                                <h5>TEST SUMMARY</h5>\n                            </Col>\n                            <Col xs={3}>\n                                {/*<Select className='filter-btn' options={this.state.filter_options} defaultValue={this.state.filter_options[0]}/>*/}\n                                <FormGroup>\n                                    <FormControl as=\"select\" className='filter-dd'>\n                                        {filter_options.map((opt,index) =>{    \n                                            return <option value={opt.value} key={index}>{opt.label}</option>\n                                        })}\n                                    </FormControl>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col xs={{span:2, offset:4}}>\n                        <Button bsPrefix='ml-3 pl-4 pr-4 bg-tapestry btn'>+ New Test</Button>\n                    </Col>\n                </Row>\n                <Row className='mt-3'>\n                    <Col xs={3}>\n                        <Card className='border-prim'>\n                            <Card.Body>\n                                <Card.Subtitle className='text-bld'>Total tests conducted</Card.Subtitle>\n                                <Card.Title className='text-prim text-bld'>{tests_comp}</Card.Title>\n                                <Card.Text>Your tests: {your_tests}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xs={3}>\n                        <Card className='border-prim'>\n                            <Card.Body>\n                                <Card.Subtitle className='text-bld'>Samples tested</Card.Subtitle>\n                                <Card.Title className='text-prim text-bld'>{samp_tested}</Card.Title>\n                                <Card.Text>Your tested samples: {your_samp}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xs={3}>\n                        <Card className='border-red'>\n                            <Card.Body>\n                                <Card.Subtitle className='text-bld'>Positive Samples</Card.Subtitle>\n                                <Card.Title className='text-red text-bld'>{pos_samp}</Card.Title>\n                                <Card.Text>{'\\u00A0'}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xs={3}>\n                        <Card className='border-black'>\n                            <Card.Body>\n                                <Card.Subtitle className='text-bld'>Undetermined Samples</Card.Subtitle>\n                                <Card.Title className='text-bld'>{und_samp}</Card.Title>\n                                <Card.Text>{'\\u00A0'}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row className='mt-3'>\n                    <Col xs={6}>\n                        <h5>COMPLETED TESTS</h5>\n                    </Col>\n                    <Col xs={{span:3, offset:3}}>\n                        <Form>\n                            <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\n                                Search\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>\n                                        {getSVG('search')}\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl  id=\"inlineFormInputGroupUsername2\" placeholder=\"Search TEST ID\" />\n                            </InputGroup>\n                        </Form>\n                    </Col>\n                </Row>\n                <Row className='mt-3 ml-3 mr-3'>\n                    <Col>\n                        <TableLanding jsonoutput={jsonoutput} testStatus={testStatus}/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default CompletedTests;","import Wrapper from \"../../bootstrap/Wrapper/Wrapper\";\r\nimport App from \"../../App\";\r\nimport Login from \"../../views/Auth/Login\";\r\nimport SignUp from \"../../views/Auth/SignUp\";\r\nimport RequestSent from \"../../views/Auth/RequestSent\";\r\nimport ResetPassword from \"../../views/Auth/ForgotPassword/ResetPassword\";\r\nimport PasswordLinkSent from \"../../views/Auth/ForgotPassword/PasswordLinkSent\";\r\nimport SetPassword from \"../../views/Auth/SetPassword\";\r\nimport ChangePassword from \"../../views/Auth/ForgotPassword/ChangePassword\";\r\nimport Congratulations from \"../../views/Auth/ForgotPassword/Congratulations\";\r\nimport Onboarding from \"../../views/OnboardingPage\";\r\nimport OngoingTests from \"../../views/LandingPage/OngoingTests\";\r\nimport CompletedTests from \"../../views/LandingPage/CompletedTests\";\r\n\r\nconst routes = [\r\n  {\r\n    component: Wrapper,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"Home\",\r\n        component: App,\r\n      },\r\n      {\r\n        path: \"/login\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"login\",\r\n        component: Login,\r\n      },\r\n      {\r\n        path: \"/sign-up\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"singUp\",\r\n        component: SignUp,\r\n      },\r\n      {\r\n        path: \"/request-sent\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"requestSent\",\r\n        component: RequestSent,\r\n      },\r\n      {\r\n        path: \"/reset-password\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"resetPassword\",\r\n        component: ResetPassword,\r\n      },\r\n      {\r\n        path: \"/password-link-sent\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"passwordLinkSent\",\r\n        component: PasswordLinkSent,\r\n      },\r\n      {\r\n        path: \"/reset/:uid/:token/\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"SetPassword\",\r\n        component: SetPassword,\r\n      },\r\n      {\r\n        path: \"/change-password\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"ChangePassword\",\r\n        component: ChangePassword,\r\n      },\r\n      {\r\n        path: \"/congratulations\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"Congratulations\",\r\n        component: Congratulations,\r\n      },\r\n      {\r\n        path: \"/onboarding\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"onboarding\",\r\n        component: Onboarding,\r\n      },\r\n      {\r\n        path: \"/ongoingtests\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"ongoingTests\",\r\n        component: OngoingTests,\r\n      },\r\n      {\r\n        path: \"/completedtests\",\r\n        exact: true,\r\n        strict: true,\r\n        name: \"completedTests\",\r\n        component: CompletedTests,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import authConstants from \"../../../constants/authConstants\";\n\nconst initalState = {\n  isSubmitted: false,\n};\n\nexport default function login(state = initalState, action) {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUESTED:\n      console.log(\"login requested reducer\");\n      return {\n        isSubmitted: true,\n        user: action.user,\n      };\n\n    case authConstants.LOGIN_SUCCESS:\n      console.log(\"login reducer\");\n      return {\n        isLoggedIn: true,\n        user: action.user,\n      };\n\n    case authConstants.LOGIN_FAILURE:\n      return {\n        isInvailed: true,\n      };\n\n    case authConstants.LOGOUT:\n      return {\n        isLoggedIn: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import authConstants from \"../../../constants/authConstants\";\n\nconst initalState = {\n  isSubmitted: false,\n};\n\nexport default function signUpReducer(state = initalState, action) {\n  switch (action.type) {\n    case authConstants.SIGN_UP_REQUESTED:\n      return {\n        isSubmitted: true,\n      };\n\n    case authConstants.SIGN_UP_SUCCESS:\n      return {\n        isRegistered: true,\n      };\n\n    case authConstants.SIGN_UP_FAILURE:\n      return {\n        isInvalid: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","import authConstants from \"../../../constants/authConstants\";\n\nconst initalState = {};\n\nexport default function passwordReducer(state = initalState, action) {\n  switch (action.type) {\n    case authConstants.RESET_PASSWORD_REQUESTED:\n      return {\n        isSubmitted: true,\n      };\n\n    case authConstants.RESET_PASSWORD_SUCCESS:\n      return {\n        isResetPasswordSuccess: true,\n      };\n\n    case authConstants.RESET_PASSWORD_FAILURE:\n      return {\n        isInvalid: true,\n      };\n\n    case authConstants.SET_PASSWORD_REQUESTED:\n      return {\n        isSubmitted: true,\n      };\n\n    case authConstants.SET_PASSWORD_SUCCESS:\n      return {\n        isSetPasswordSuccess: true,\n      };\n\n    case authConstants.SET_PASSWORD_FAILURE:\n      return {\n        isInvalid: true,\n      };\n\n    case authConstants.CHANGE_PASSWORD_REQUESTED:\n      return {\n        isSubmitted: true,\n      };\n\n    case authConstants.CHANGE_PASSWORD_SUCCESS:\n      return {\n        isChangePasswordSuccess: true,\n      };\n\n    case authConstants.CHANGE_PASSWORD_FAILURE:\n      return {\n        isChangePasswordFailure: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport LoginReducer from \"./authReducers/loginReducer\";\nimport SignUpReducer from \"./authReducers/signupReducer\";\nimport PasswordReducer from \"./authReducers/passwordReducer\";\n\nconst rootReducer = combineReducers({\n  login: LoginReducer,\n  signUp: SignUpReducer,\n  password: PasswordReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from 'redux-logger';\n\nimport rootreducer from \"../reducers\";\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n    rootreducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\nimport routes from './services/route/routes';\nimport * as routeService from './services/route/routeService';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store/index'\nimport './index.scss';\n\nReactDOM.render( \n    <React.StrictMode>\n        <Provider store={store}>\n            <Router > \n                { routeService.renderRoutes(routes) } \n            </Router>   \n        </Provider>    \n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/machine1.382c8be9.png\";","module.exports = __webpack_public_path__ + \"static/media/machine2.c8b62361.png\";","module.exports = __webpack_public_path__ + \"static/media/machine3.5c686bcb.png\";","module.exports = __webpack_public_path__ + \"static/media/machine4.8397a486.png\";"],"sourceRoot":""}